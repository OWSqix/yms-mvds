/*
 * sovity EDC API Wrapper
 * sovity's EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@ymatics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.sovity.edc.client.gen.model;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.sovity.edc.client.gen.model.UiDataSource;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import de.sovity.edc.client.gen.JSON;

/**
 * Type-safe data offer metadata for creating an asset as supported by the sovity product landscape. Contains extension points.
 */
@ApiModel(description = "Type-safe data offer metadata for creating an asset as supported by the sovity product landscape. Contains extension points.")
@lombok.AllArgsConstructor
@lombok.Builder
@SuppressWarnings("all")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class UiAssetCreateRequest {
  public static final String SERIALIZED_NAME_DATA_SOURCE = "dataSource";
  @SerializedName(SERIALIZED_NAME_DATA_SOURCE)
  @javax.annotation.Nonnull
  private UiDataSource dataSource;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nonnull
  private String id;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  @javax.annotation.Nullable
  private String title;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  @javax.annotation.Nullable
  private String language;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_PUBLISHER_HOMEPAGE = "publisherHomepage";
  @SerializedName(SERIALIZED_NAME_PUBLISHER_HOMEPAGE)
  @javax.annotation.Nullable
  private String publisherHomepage;

  public static final String SERIALIZED_NAME_LICENSE_URL = "licenseUrl";
  @SerializedName(SERIALIZED_NAME_LICENSE_URL)
  @javax.annotation.Nullable
  private String licenseUrl;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  @javax.annotation.Nullable
  private String version;

  public static final String SERIALIZED_NAME_KEYWORDS = "keywords";
  @SerializedName(SERIALIZED_NAME_KEYWORDS)
  @javax.annotation.Nullable
  private List<String> keywords = new ArrayList<>();

  public static final String SERIALIZED_NAME_MEDIA_TYPE = "mediaType";
  @SerializedName(SERIALIZED_NAME_MEDIA_TYPE)
  @javax.annotation.Nullable
  private String mediaType;

  public static final String SERIALIZED_NAME_LANDING_PAGE_URL = "landingPageUrl";
  @SerializedName(SERIALIZED_NAME_LANDING_PAGE_URL)
  @javax.annotation.Nullable
  private String landingPageUrl;

  public static final String SERIALIZED_NAME_DATA_CATEGORY = "dataCategory";
  @SerializedName(SERIALIZED_NAME_DATA_CATEGORY)
  @javax.annotation.Nullable
  private String dataCategory;

  public static final String SERIALIZED_NAME_DATA_SUBCATEGORY = "dataSubcategory";
  @SerializedName(SERIALIZED_NAME_DATA_SUBCATEGORY)
  @javax.annotation.Nullable
  private String dataSubcategory;

  public static final String SERIALIZED_NAME_DATA_MODEL = "dataModel";
  @SerializedName(SERIALIZED_NAME_DATA_MODEL)
  @javax.annotation.Nullable
  private String dataModel;

  public static final String SERIALIZED_NAME_GEO_REFERENCE_METHOD = "geoReferenceMethod";
  @SerializedName(SERIALIZED_NAME_GEO_REFERENCE_METHOD)
  @javax.annotation.Nullable
  private String geoReferenceMethod;

  public static final String SERIALIZED_NAME_TRANSPORT_MODE = "transportMode";
  @SerializedName(SERIALIZED_NAME_TRANSPORT_MODE)
  @javax.annotation.Nullable
  private String transportMode;

  public static final String SERIALIZED_NAME_SOVEREIGN_LEGAL_NAME = "sovereignLegalName";
  @SerializedName(SERIALIZED_NAME_SOVEREIGN_LEGAL_NAME)
  @javax.annotation.Nullable
  private String sovereignLegalName;

  public static final String SERIALIZED_NAME_GEO_LOCATION = "geoLocation";
  @SerializedName(SERIALIZED_NAME_GEO_LOCATION)
  @javax.annotation.Nullable
  private String geoLocation;

  public static final String SERIALIZED_NAME_NUTS_LOCATIONS = "nutsLocations";
  @SerializedName(SERIALIZED_NAME_NUTS_LOCATIONS)
  @javax.annotation.Nullable
  private List<String> nutsLocations = new ArrayList<>();

  public static final String SERIALIZED_NAME_DATA_SAMPLE_URLS = "dataSampleUrls";
  @SerializedName(SERIALIZED_NAME_DATA_SAMPLE_URLS)
  @javax.annotation.Nullable
  private List<String> dataSampleUrls = new ArrayList<>();

  public static final String SERIALIZED_NAME_REFERENCE_FILE_URLS = "referenceFileUrls";
  @SerializedName(SERIALIZED_NAME_REFERENCE_FILE_URLS)
  @javax.annotation.Nullable
  private List<String> referenceFileUrls = new ArrayList<>();

  public static final String SERIALIZED_NAME_REFERENCE_FILES_DESCRIPTION = "referenceFilesDescription";
  @SerializedName(SERIALIZED_NAME_REFERENCE_FILES_DESCRIPTION)
  @javax.annotation.Nullable
  private String referenceFilesDescription;

  public static final String SERIALIZED_NAME_CONDITIONS_FOR_USE = "conditionsForUse";
  @SerializedName(SERIALIZED_NAME_CONDITIONS_FOR_USE)
  @javax.annotation.Nullable
  private String conditionsForUse;

  public static final String SERIALIZED_NAME_DATA_UPDATE_FREQUENCY = "dataUpdateFrequency";
  @SerializedName(SERIALIZED_NAME_DATA_UPDATE_FREQUENCY)
  @javax.annotation.Nullable
  private String dataUpdateFrequency;

  public static final String SERIALIZED_NAME_TEMPORAL_COVERAGE_FROM = "temporalCoverageFrom";
  @SerializedName(SERIALIZED_NAME_TEMPORAL_COVERAGE_FROM)
  @javax.annotation.Nullable
  private LocalDate temporalCoverageFrom;

  public static final String SERIALIZED_NAME_TEMPORAL_COVERAGE_TO_INCLUSIVE = "temporalCoverageToInclusive";
  @SerializedName(SERIALIZED_NAME_TEMPORAL_COVERAGE_TO_INCLUSIVE)
  @javax.annotation.Nullable
  private LocalDate temporalCoverageToInclusive;

  public static final String SERIALIZED_NAME_CUSTOM_JSON_AS_STRING = "customJsonAsString";
  @SerializedName(SERIALIZED_NAME_CUSTOM_JSON_AS_STRING)
  @javax.annotation.Nullable
  private String customJsonAsString;

  public static final String SERIALIZED_NAME_CUSTOM_JSON_LD_AS_STRING = "customJsonLdAsString";
  @SerializedName(SERIALIZED_NAME_CUSTOM_JSON_LD_AS_STRING)
  @javax.annotation.Nullable
  private String customJsonLdAsString;

  public static final String SERIALIZED_NAME_PRIVATE_CUSTOM_JSON_AS_STRING = "privateCustomJsonAsString";
  @SerializedName(SERIALIZED_NAME_PRIVATE_CUSTOM_JSON_AS_STRING)
  @javax.annotation.Nullable
  private String privateCustomJsonAsString;

  public static final String SERIALIZED_NAME_PRIVATE_CUSTOM_JSON_LD_AS_STRING = "privateCustomJsonLdAsString";
  @SerializedName(SERIALIZED_NAME_PRIVATE_CUSTOM_JSON_LD_AS_STRING)
  @javax.annotation.Nullable
  private String privateCustomJsonLdAsString;

  public UiAssetCreateRequest() {
  }

  public UiAssetCreateRequest dataSource(@javax.annotation.Nonnull UiDataSource dataSource) {
    this.dataSource = dataSource;
    return this;
  }

  /**
   * Data Source
   * @return dataSource
   */
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Data Source")
  public UiDataSource getDataSource() {
    return dataSource;
  }

  public void setDataSource(@javax.annotation.Nonnull UiDataSource dataSource) {
    this.dataSource = dataSource;
  }


  public UiAssetCreateRequest id(@javax.annotation.Nonnull String id) {
    this.id = id;
    return this;
  }

  /**
   * Asset Id
   * @return id
   */
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Asset Id")
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }


  public UiAssetCreateRequest title(@javax.annotation.Nullable String title) {
    this.title = title;
    return this;
  }

  /**
   * Asset Title
   * @return title
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Asset Title")
  public String getTitle() {
    return title;
  }

  public void setTitle(@javax.annotation.Nullable String title) {
    this.title = title;
  }


  public UiAssetCreateRequest language(@javax.annotation.Nullable String language) {
    this.language = language;
    return this;
  }

  /**
   * Asset Language
   * @return language
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Asset Language")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(@javax.annotation.Nullable String language) {
    this.language = language;
  }


  public UiAssetCreateRequest description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Asset Description
   * @return description
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Asset Description")
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public UiAssetCreateRequest publisherHomepage(@javax.annotation.Nullable String publisherHomepage) {
    this.publisherHomepage = publisherHomepage;
    return this;
  }

  /**
   * Asset Homepage
   * @return publisherHomepage
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Asset Homepage")
  public String getPublisherHomepage() {
    return publisherHomepage;
  }

  public void setPublisherHomepage(@javax.annotation.Nullable String publisherHomepage) {
    this.publisherHomepage = publisherHomepage;
  }


  public UiAssetCreateRequest licenseUrl(@javax.annotation.Nullable String licenseUrl) {
    this.licenseUrl = licenseUrl;
    return this;
  }

  /**
   * License URL
   * @return licenseUrl
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "License URL")
  public String getLicenseUrl() {
    return licenseUrl;
  }

  public void setLicenseUrl(@javax.annotation.Nullable String licenseUrl) {
    this.licenseUrl = licenseUrl;
  }


  public UiAssetCreateRequest version(@javax.annotation.Nullable String version) {
    this.version = version;
    return this;
  }

  /**
   * Version
   * @return version
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Version")
  public String getVersion() {
    return version;
  }

  public void setVersion(@javax.annotation.Nullable String version) {
    this.version = version;
  }


  public UiAssetCreateRequest keywords(@javax.annotation.Nullable List<String> keywords) {
    this.keywords = keywords;
    return this;
  }

  public UiAssetCreateRequest addKeywordsItem(String keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

  /**
   * Asset Keywords
   * @return keywords
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Asset Keywords")
  public List<String> getKeywords() {
    return keywords;
  }

  public void setKeywords(@javax.annotation.Nullable List<String> keywords) {
    this.keywords = keywords;
  }


  public UiAssetCreateRequest mediaType(@javax.annotation.Nullable String mediaType) {
    this.mediaType = mediaType;
    return this;
  }

  /**
   * Asset MediaType
   * @return mediaType
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Asset MediaType")
  public String getMediaType() {
    return mediaType;
  }

  public void setMediaType(@javax.annotation.Nullable String mediaType) {
    this.mediaType = mediaType;
  }


  public UiAssetCreateRequest landingPageUrl(@javax.annotation.Nullable String landingPageUrl) {
    this.landingPageUrl = landingPageUrl;
    return this;
  }

  /**
   * Landing Page URL
   * @return landingPageUrl
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Landing Page URL")
  public String getLandingPageUrl() {
    return landingPageUrl;
  }

  public void setLandingPageUrl(@javax.annotation.Nullable String landingPageUrl) {
    this.landingPageUrl = landingPageUrl;
  }


  public UiAssetCreateRequest dataCategory(@javax.annotation.Nullable String dataCategory) {
    this.dataCategory = dataCategory;
    return this;
  }

  /**
   * Data Category
   * @return dataCategory
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Data Category")
  public String getDataCategory() {
    return dataCategory;
  }

  public void setDataCategory(@javax.annotation.Nullable String dataCategory) {
    this.dataCategory = dataCategory;
  }


  public UiAssetCreateRequest dataSubcategory(@javax.annotation.Nullable String dataSubcategory) {
    this.dataSubcategory = dataSubcategory;
    return this;
  }

  /**
   * Data Subcategory
   * @return dataSubcategory
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Data Subcategory")
  public String getDataSubcategory() {
    return dataSubcategory;
  }

  public void setDataSubcategory(@javax.annotation.Nullable String dataSubcategory) {
    this.dataSubcategory = dataSubcategory;
  }


  public UiAssetCreateRequest dataModel(@javax.annotation.Nullable String dataModel) {
    this.dataModel = dataModel;
    return this;
  }

  /**
   * Data Model
   * @return dataModel
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Data Model")
  public String getDataModel() {
    return dataModel;
  }

  public void setDataModel(@javax.annotation.Nullable String dataModel) {
    this.dataModel = dataModel;
  }


  public UiAssetCreateRequest geoReferenceMethod(@javax.annotation.Nullable String geoReferenceMethod) {
    this.geoReferenceMethod = geoReferenceMethod;
    return this;
  }

  /**
   * Geo-Reference Method
   * @return geoReferenceMethod
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Geo-Reference Method")
  public String getGeoReferenceMethod() {
    return geoReferenceMethod;
  }

  public void setGeoReferenceMethod(@javax.annotation.Nullable String geoReferenceMethod) {
    this.geoReferenceMethod = geoReferenceMethod;
  }


  public UiAssetCreateRequest transportMode(@javax.annotation.Nullable String transportMode) {
    this.transportMode = transportMode;
    return this;
  }

  /**
   * Transport Mode
   * @return transportMode
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Transport Mode")
  public String getTransportMode() {
    return transportMode;
  }

  public void setTransportMode(@javax.annotation.Nullable String transportMode) {
    this.transportMode = transportMode;
  }


  public UiAssetCreateRequest sovereignLegalName(@javax.annotation.Nullable String sovereignLegalName) {
    this.sovereignLegalName = sovereignLegalName;
    return this;
  }

  /**
   * The sovereign is distinct from the publisher by being the legal owner of the data.
   * @return sovereignLegalName
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The sovereign is distinct from the publisher by being the legal owner of the data.")
  public String getSovereignLegalName() {
    return sovereignLegalName;
  }

  public void setSovereignLegalName(@javax.annotation.Nullable String sovereignLegalName) {
    this.sovereignLegalName = sovereignLegalName;
  }


  public UiAssetCreateRequest geoLocation(@javax.annotation.Nullable String geoLocation) {
    this.geoLocation = geoLocation;
    return this;
  }

  /**
   * Geo location
   * @return geoLocation
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Geo location")
  public String getGeoLocation() {
    return geoLocation;
  }

  public void setGeoLocation(@javax.annotation.Nullable String geoLocation) {
    this.geoLocation = geoLocation;
  }


  public UiAssetCreateRequest nutsLocations(@javax.annotation.Nullable List<String> nutsLocations) {
    this.nutsLocations = nutsLocations;
    return this;
  }

  public UiAssetCreateRequest addNutsLocationsItem(String nutsLocationsItem) {
    if (this.nutsLocations == null) {
      this.nutsLocations = new ArrayList<>();
    }
    this.nutsLocations.add(nutsLocationsItem);
    return this;
  }

  /**
   * Locations by NUTS standard which divides countries into administrative divisions
   * @return nutsLocations
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Locations by NUTS standard which divides countries into administrative divisions")
  public List<String> getNutsLocations() {
    return nutsLocations;
  }

  public void setNutsLocations(@javax.annotation.Nullable List<String> nutsLocations) {
    this.nutsLocations = nutsLocations;
  }


  public UiAssetCreateRequest dataSampleUrls(@javax.annotation.Nullable List<String> dataSampleUrls) {
    this.dataSampleUrls = dataSampleUrls;
    return this;
  }

  public UiAssetCreateRequest addDataSampleUrlsItem(String dataSampleUrlsItem) {
    if (this.dataSampleUrls == null) {
      this.dataSampleUrls = new ArrayList<>();
    }
    this.dataSampleUrls.add(dataSampleUrlsItem);
    return this;
  }

  /**
   * Data sample URLs
   * @return dataSampleUrls
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Data sample URLs")
  public List<String> getDataSampleUrls() {
    return dataSampleUrls;
  }

  public void setDataSampleUrls(@javax.annotation.Nullable List<String> dataSampleUrls) {
    this.dataSampleUrls = dataSampleUrls;
  }


  public UiAssetCreateRequest referenceFileUrls(@javax.annotation.Nullable List<String> referenceFileUrls) {
    this.referenceFileUrls = referenceFileUrls;
    return this;
  }

  public UiAssetCreateRequest addReferenceFileUrlsItem(String referenceFileUrlsItem) {
    if (this.referenceFileUrls == null) {
      this.referenceFileUrls = new ArrayList<>();
    }
    this.referenceFileUrls.add(referenceFileUrlsItem);
    return this;
  }

  /**
   * Reference file/schema URLs
   * @return referenceFileUrls
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reference file/schema URLs")
  public List<String> getReferenceFileUrls() {
    return referenceFileUrls;
  }

  public void setReferenceFileUrls(@javax.annotation.Nullable List<String> referenceFileUrls) {
    this.referenceFileUrls = referenceFileUrls;
  }


  public UiAssetCreateRequest referenceFilesDescription(@javax.annotation.Nullable String referenceFilesDescription) {
    this.referenceFilesDescription = referenceFilesDescription;
    return this;
  }

  /**
   * Additional information on reference files/schemas
   * @return referenceFilesDescription
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional information on reference files/schemas")
  public String getReferenceFilesDescription() {
    return referenceFilesDescription;
  }

  public void setReferenceFilesDescription(@javax.annotation.Nullable String referenceFilesDescription) {
    this.referenceFilesDescription = referenceFilesDescription;
  }


  public UiAssetCreateRequest conditionsForUse(@javax.annotation.Nullable String conditionsForUse) {
    this.conditionsForUse = conditionsForUse;
    return this;
  }

  /**
   * Instructions for use that are not legally relevant e.g. information on how to cite the dataset in papers
   * @return conditionsForUse
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Instructions for use that are not legally relevant e.g. information on how to cite the dataset in papers")
  public String getConditionsForUse() {
    return conditionsForUse;
  }

  public void setConditionsForUse(@javax.annotation.Nullable String conditionsForUse) {
    this.conditionsForUse = conditionsForUse;
  }


  public UiAssetCreateRequest dataUpdateFrequency(@javax.annotation.Nullable String dataUpdateFrequency) {
    this.dataUpdateFrequency = dataUpdateFrequency;
    return this;
  }

  /**
   * Data update frequency
   * @return dataUpdateFrequency
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Data update frequency")
  public String getDataUpdateFrequency() {
    return dataUpdateFrequency;
  }

  public void setDataUpdateFrequency(@javax.annotation.Nullable String dataUpdateFrequency) {
    this.dataUpdateFrequency = dataUpdateFrequency;
  }


  public UiAssetCreateRequest temporalCoverageFrom(@javax.annotation.Nullable LocalDate temporalCoverageFrom) {
    this.temporalCoverageFrom = temporalCoverageFrom;
    return this;
  }

  /**
   * Temporal coverage start date
   * @return temporalCoverageFrom
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Temporal coverage start date")
  public LocalDate getTemporalCoverageFrom() {
    return temporalCoverageFrom;
  }

  public void setTemporalCoverageFrom(@javax.annotation.Nullable LocalDate temporalCoverageFrom) {
    this.temporalCoverageFrom = temporalCoverageFrom;
  }


  public UiAssetCreateRequest temporalCoverageToInclusive(@javax.annotation.Nullable LocalDate temporalCoverageToInclusive) {
    this.temporalCoverageToInclusive = temporalCoverageToInclusive;
    return this;
  }

  /**
   * Temporal coverage end date (inclusive)
   * @return temporalCoverageToInclusive
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Temporal coverage end date (inclusive)")
  public LocalDate getTemporalCoverageToInclusive() {
    return temporalCoverageToInclusive;
  }

  public void setTemporalCoverageToInclusive(@javax.annotation.Nullable LocalDate temporalCoverageToInclusive) {
    this.temporalCoverageToInclusive = temporalCoverageToInclusive;
  }


  public UiAssetCreateRequest customJsonAsString(@javax.annotation.Nullable String customJsonAsString) {
    this.customJsonAsString = customJsonAsString;
    return this;
  }

  /**
   * Contains serialized custom properties in the JSON format.
   * @return customJsonAsString
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Contains serialized custom properties in the JSON format.")
  public String getCustomJsonAsString() {
    return customJsonAsString;
  }

  public void setCustomJsonAsString(@javax.annotation.Nullable String customJsonAsString) {
    this.customJsonAsString = customJsonAsString;
  }


  public UiAssetCreateRequest customJsonLdAsString(@javax.annotation.Nullable String customJsonLdAsString) {
    this.customJsonLdAsString = customJsonLdAsString;
    return this;
  }

  /**
   * Contains serialized custom properties in the JSON LD format. Contrary to the customJsonAsString field, this string must represent a JSON LD object and will be affected by JSON LD compaction and expansion. Due to a technical limitation, the properties can&#39;t be booleans.
   * @return customJsonLdAsString
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Contains serialized custom properties in the JSON LD format. Contrary to the customJsonAsString field, this string must represent a JSON LD object and will be affected by JSON LD compaction and expansion. Due to a technical limitation, the properties can't be booleans.")
  public String getCustomJsonLdAsString() {
    return customJsonLdAsString;
  }

  public void setCustomJsonLdAsString(@javax.annotation.Nullable String customJsonLdAsString) {
    this.customJsonLdAsString = customJsonLdAsString;
  }


  public UiAssetCreateRequest privateCustomJsonAsString(@javax.annotation.Nullable String privateCustomJsonAsString) {
    this.privateCustomJsonAsString = privateCustomJsonAsString;
    return this;
  }

  /**
   * Same as customJsonAsString but the data will be stored in the private properties.
   * @return privateCustomJsonAsString
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Same as customJsonAsString but the data will be stored in the private properties.")
  public String getPrivateCustomJsonAsString() {
    return privateCustomJsonAsString;
  }

  public void setPrivateCustomJsonAsString(@javax.annotation.Nullable String privateCustomJsonAsString) {
    this.privateCustomJsonAsString = privateCustomJsonAsString;
  }


  public UiAssetCreateRequest privateCustomJsonLdAsString(@javax.annotation.Nullable String privateCustomJsonLdAsString) {
    this.privateCustomJsonLdAsString = privateCustomJsonLdAsString;
    return this;
  }

  /**
   * Same as customJsonLdAsString but the data will be stored in the private properties. The same limitations apply.
   * @return privateCustomJsonLdAsString
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Same as customJsonLdAsString but the data will be stored in the private properties. The same limitations apply.")
  public String getPrivateCustomJsonLdAsString() {
    return privateCustomJsonLdAsString;
  }

  public void setPrivateCustomJsonLdAsString(@javax.annotation.Nullable String privateCustomJsonLdAsString) {
    this.privateCustomJsonLdAsString = privateCustomJsonLdAsString;
  }



  @Override
  public boolean equals(Object o) {
    return EqualsBuilder.reflectionEquals(this, o, false, null, true);
  }

  @Override
  public int hashCode() {
    return HashCodeBuilder.reflectionHashCode(this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UiAssetCreateRequest {\n");
    sb.append("    dataSource: ").append(toIndentedString(dataSource)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    publisherHomepage: ").append(toIndentedString(publisherHomepage)).append("\n");
    sb.append("    licenseUrl: ").append(toIndentedString(licenseUrl)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    mediaType: ").append(toIndentedString(mediaType)).append("\n");
    sb.append("    landingPageUrl: ").append(toIndentedString(landingPageUrl)).append("\n");
    sb.append("    dataCategory: ").append(toIndentedString(dataCategory)).append("\n");
    sb.append("    dataSubcategory: ").append(toIndentedString(dataSubcategory)).append("\n");
    sb.append("    dataModel: ").append(toIndentedString(dataModel)).append("\n");
    sb.append("    geoReferenceMethod: ").append(toIndentedString(geoReferenceMethod)).append("\n");
    sb.append("    transportMode: ").append(toIndentedString(transportMode)).append("\n");
    sb.append("    sovereignLegalName: ").append(toIndentedString(sovereignLegalName)).append("\n");
    sb.append("    geoLocation: ").append(toIndentedString(geoLocation)).append("\n");
    sb.append("    nutsLocations: ").append(toIndentedString(nutsLocations)).append("\n");
    sb.append("    dataSampleUrls: ").append(toIndentedString(dataSampleUrls)).append("\n");
    sb.append("    referenceFileUrls: ").append(toIndentedString(referenceFileUrls)).append("\n");
    sb.append("    referenceFilesDescription: ").append(toIndentedString(referenceFilesDescription)).append("\n");
    sb.append("    conditionsForUse: ").append(toIndentedString(conditionsForUse)).append("\n");
    sb.append("    dataUpdateFrequency: ").append(toIndentedString(dataUpdateFrequency)).append("\n");
    sb.append("    temporalCoverageFrom: ").append(toIndentedString(temporalCoverageFrom)).append("\n");
    sb.append("    temporalCoverageToInclusive: ").append(toIndentedString(temporalCoverageToInclusive)).append("\n");
    sb.append("    customJsonAsString: ").append(toIndentedString(customJsonAsString)).append("\n");
    sb.append("    customJsonLdAsString: ").append(toIndentedString(customJsonLdAsString)).append("\n");
    sb.append("    privateCustomJsonAsString: ").append(toIndentedString(privateCustomJsonAsString)).append("\n");
    sb.append("    privateCustomJsonLdAsString: ").append(toIndentedString(privateCustomJsonLdAsString)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dataSource");
    openapiFields.add("id");
    openapiFields.add("title");
    openapiFields.add("language");
    openapiFields.add("description");
    openapiFields.add("publisherHomepage");
    openapiFields.add("licenseUrl");
    openapiFields.add("version");
    openapiFields.add("keywords");
    openapiFields.add("mediaType");
    openapiFields.add("landingPageUrl");
    openapiFields.add("dataCategory");
    openapiFields.add("dataSubcategory");
    openapiFields.add("dataModel");
    openapiFields.add("geoReferenceMethod");
    openapiFields.add("transportMode");
    openapiFields.add("sovereignLegalName");
    openapiFields.add("geoLocation");
    openapiFields.add("nutsLocations");
    openapiFields.add("dataSampleUrls");
    openapiFields.add("referenceFileUrls");
    openapiFields.add("referenceFilesDescription");
    openapiFields.add("conditionsForUse");
    openapiFields.add("dataUpdateFrequency");
    openapiFields.add("temporalCoverageFrom");
    openapiFields.add("temporalCoverageToInclusive");
    openapiFields.add("customJsonAsString");
    openapiFields.add("customJsonLdAsString");
    openapiFields.add("privateCustomJsonAsString");
    openapiFields.add("privateCustomJsonLdAsString");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("dataSource");
    openapiRequiredFields.add("id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UiAssetCreateRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UiAssetCreateRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UiAssetCreateRequest is not found in the empty JSON string", UiAssetCreateRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UiAssetCreateRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UiAssetCreateRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UiAssetCreateRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `dataSource`
      UiDataSource.validateJsonElement(jsonObj.get("dataSource"));
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) && !jsonObj.get("language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("publisherHomepage") != null && !jsonObj.get("publisherHomepage").isJsonNull()) && !jsonObj.get("publisherHomepage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publisherHomepage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publisherHomepage").toString()));
      }
      if ((jsonObj.get("licenseUrl") != null && !jsonObj.get("licenseUrl").isJsonNull()) && !jsonObj.get("licenseUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `licenseUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("licenseUrl").toString()));
      }
      if ((jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) && !jsonObj.get("version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("keywords") != null && !jsonObj.get("keywords").isJsonNull() && !jsonObj.get("keywords").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `keywords` to be an array in the JSON string but got `%s`", jsonObj.get("keywords").toString()));
      }
      if ((jsonObj.get("mediaType") != null && !jsonObj.get("mediaType").isJsonNull()) && !jsonObj.get("mediaType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mediaType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mediaType").toString()));
      }
      if ((jsonObj.get("landingPageUrl") != null && !jsonObj.get("landingPageUrl").isJsonNull()) && !jsonObj.get("landingPageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `landingPageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("landingPageUrl").toString()));
      }
      if ((jsonObj.get("dataCategory") != null && !jsonObj.get("dataCategory").isJsonNull()) && !jsonObj.get("dataCategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataCategory").toString()));
      }
      if ((jsonObj.get("dataSubcategory") != null && !jsonObj.get("dataSubcategory").isJsonNull()) && !jsonObj.get("dataSubcategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataSubcategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataSubcategory").toString()));
      }
      if ((jsonObj.get("dataModel") != null && !jsonObj.get("dataModel").isJsonNull()) && !jsonObj.get("dataModel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataModel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataModel").toString()));
      }
      if ((jsonObj.get("geoReferenceMethod") != null && !jsonObj.get("geoReferenceMethod").isJsonNull()) && !jsonObj.get("geoReferenceMethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `geoReferenceMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("geoReferenceMethod").toString()));
      }
      if ((jsonObj.get("transportMode") != null && !jsonObj.get("transportMode").isJsonNull()) && !jsonObj.get("transportMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transportMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transportMode").toString()));
      }
      if ((jsonObj.get("sovereignLegalName") != null && !jsonObj.get("sovereignLegalName").isJsonNull()) && !jsonObj.get("sovereignLegalName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sovereignLegalName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sovereignLegalName").toString()));
      }
      if ((jsonObj.get("geoLocation") != null && !jsonObj.get("geoLocation").isJsonNull()) && !jsonObj.get("geoLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `geoLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("geoLocation").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("nutsLocations") != null && !jsonObj.get("nutsLocations").isJsonNull() && !jsonObj.get("nutsLocations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `nutsLocations` to be an array in the JSON string but got `%s`", jsonObj.get("nutsLocations").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("dataSampleUrls") != null && !jsonObj.get("dataSampleUrls").isJsonNull() && !jsonObj.get("dataSampleUrls").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataSampleUrls` to be an array in the JSON string but got `%s`", jsonObj.get("dataSampleUrls").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("referenceFileUrls") != null && !jsonObj.get("referenceFileUrls").isJsonNull() && !jsonObj.get("referenceFileUrls").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `referenceFileUrls` to be an array in the JSON string but got `%s`", jsonObj.get("referenceFileUrls").toString()));
      }
      if ((jsonObj.get("referenceFilesDescription") != null && !jsonObj.get("referenceFilesDescription").isJsonNull()) && !jsonObj.get("referenceFilesDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `referenceFilesDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("referenceFilesDescription").toString()));
      }
      if ((jsonObj.get("conditionsForUse") != null && !jsonObj.get("conditionsForUse").isJsonNull()) && !jsonObj.get("conditionsForUse").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conditionsForUse` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conditionsForUse").toString()));
      }
      if ((jsonObj.get("dataUpdateFrequency") != null && !jsonObj.get("dataUpdateFrequency").isJsonNull()) && !jsonObj.get("dataUpdateFrequency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataUpdateFrequency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataUpdateFrequency").toString()));
      }
      if ((jsonObj.get("customJsonAsString") != null && !jsonObj.get("customJsonAsString").isJsonNull()) && !jsonObj.get("customJsonAsString").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customJsonAsString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customJsonAsString").toString()));
      }
      if ((jsonObj.get("customJsonLdAsString") != null && !jsonObj.get("customJsonLdAsString").isJsonNull()) && !jsonObj.get("customJsonLdAsString").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customJsonLdAsString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customJsonLdAsString").toString()));
      }
      if ((jsonObj.get("privateCustomJsonAsString") != null && !jsonObj.get("privateCustomJsonAsString").isJsonNull()) && !jsonObj.get("privateCustomJsonAsString").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privateCustomJsonAsString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privateCustomJsonAsString").toString()));
      }
      if ((jsonObj.get("privateCustomJsonLdAsString") != null && !jsonObj.get("privateCustomJsonLdAsString").isJsonNull()) && !jsonObj.get("privateCustomJsonLdAsString").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privateCustomJsonLdAsString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privateCustomJsonLdAsString").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UiAssetCreateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UiAssetCreateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UiAssetCreateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UiAssetCreateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UiAssetCreateRequest>() {
           @Override
           public void write(JsonWriter out, UiAssetCreateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UiAssetCreateRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UiAssetCreateRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UiAssetCreateRequest
   * @throws IOException if the JSON string is invalid with respect to UiAssetCreateRequest
   */
  public static UiAssetCreateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UiAssetCreateRequest.class);
  }

  /**
   * Convert an instance of UiAssetCreateRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

