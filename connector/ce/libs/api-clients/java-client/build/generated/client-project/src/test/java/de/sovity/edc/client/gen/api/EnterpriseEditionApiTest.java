/*
 * sovity EDC API Wrapper
 * sovity's EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@ymatics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.sovity.edc.client.gen.api;

import de.sovity.edc.client.gen.ApiException;
import de.sovity.edc.client.gen.model.ConnectorLimits;
import de.sovity.edc.client.gen.model.UiAssetCreateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EnterpriseEditionApi
 */
@Disabled
public class EnterpriseEditionApiTest {

    private final EnterpriseEditionApi api = new EnterpriseEditionApi();

    /**
     * Available and used resources of a connector.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void connectorLimitsTest() throws ApiException {
        ConnectorLimits response = api.connectorLimits();
        // TODO: test validations
    }

    /**
     * Create an asset from an uploaded file.
     *
     * Creates an asset using the uploaded file as data source.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileUploadCreateAssetTest() throws ApiException {
        String blobId = null;
        UiAssetCreateRequest uiAssetCreateRequest = null;
        api.fileUploadCreateAsset(blobId, uiAssetCreateRequest);
        // TODO: test validations
    }

    /**
     * Requests a Blob for file upload.
     *
     * Requests a Blob URL with a SAS Token so that the UI can directly upload the file to the Azure Blob Storage. Returns the Blob ID / Token.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileUploadRequestSasTokenTest() throws ApiException {
        String response = api.fileUploadRequestSasToken();
        // TODO: test validations
    }

}
