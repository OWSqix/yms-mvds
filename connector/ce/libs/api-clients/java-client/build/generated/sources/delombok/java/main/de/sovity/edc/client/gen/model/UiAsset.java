/*
 * sovity EDC API Wrapper
 * sovity's EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@ymatics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package de.sovity.edc.client.gen.model;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.sovity.edc.client.gen.model.DataSourceAvailability;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import de.sovity.edc.client.gen.JSON;

/**
 * Type-safe data offer metadata as supported by the sovity product landscape. Contains extension points.
 */
@ApiModel(description = "Type-safe data offer metadata as supported by the sovity product landscape. Contains extension points.")
@SuppressWarnings("all")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class UiAsset {
  public static final String SERIALIZED_NAME_DATA_SOURCE_AVAILABILITY = "dataSourceAvailability";
  @SerializedName(SERIALIZED_NAME_DATA_SOURCE_AVAILABILITY)
  @javax.annotation.Nonnull
  private DataSourceAvailability dataSourceAvailability;
  public static final String SERIALIZED_NAME_ASSET_ID = "assetId";
  @SerializedName(SERIALIZED_NAME_ASSET_ID)
  @javax.annotation.Nonnull
  private String assetId;
  public static final String SERIALIZED_NAME_CONNECTOR_ENDPOINT = "connectorEndpoint";
  @SerializedName(SERIALIZED_NAME_CONNECTOR_ENDPOINT)
  @javax.annotation.Nonnull
  private String connectorEndpoint;
  public static final String SERIALIZED_NAME_PARTICIPANT_ID = "participantId";
  @SerializedName(SERIALIZED_NAME_PARTICIPANT_ID)
  @javax.annotation.Nonnull
  private String participantId;
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  @javax.annotation.Nonnull
  private String title;
  public static final String SERIALIZED_NAME_CREATOR_ORGANIZATION_NAME = "creatorOrganizationName";
  @SerializedName(SERIALIZED_NAME_CREATOR_ORGANIZATION_NAME)
  @javax.annotation.Nonnull
  private String creatorOrganizationName;
  public static final String SERIALIZED_NAME_ON_REQUEST_CONTACT_EMAIL = "onRequestContactEmail";
  @SerializedName(SERIALIZED_NAME_ON_REQUEST_CONTACT_EMAIL)
  @javax.annotation.Nullable
  private String onRequestContactEmail;
  public static final String SERIALIZED_NAME_ON_REQUEST_CONTACT_EMAIL_SUBJECT = "onRequestContactEmailSubject";
  @SerializedName(SERIALIZED_NAME_ON_REQUEST_CONTACT_EMAIL_SUBJECT)
  @javax.annotation.Nullable
  private String onRequestContactEmailSubject;
  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  @javax.annotation.Nullable
  private String language;
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;
  public static final String SERIALIZED_NAME_DESCRIPTION_SHORT_TEXT = "descriptionShortText";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_SHORT_TEXT)
  @javax.annotation.Nullable
  private String descriptionShortText;
  public static final String SERIALIZED_NAME_IS_OWN_CONNECTOR = "isOwnConnector";
  @SerializedName(SERIALIZED_NAME_IS_OWN_CONNECTOR)
  @javax.annotation.Nonnull
  private Boolean isOwnConnector;
  public static final String SERIALIZED_NAME_PUBLISHER_HOMEPAGE = "publisherHomepage";
  @SerializedName(SERIALIZED_NAME_PUBLISHER_HOMEPAGE)
  @javax.annotation.Nullable
  private String publisherHomepage;
  public static final String SERIALIZED_NAME_LICENSE_URL = "licenseUrl";
  @SerializedName(SERIALIZED_NAME_LICENSE_URL)
  @javax.annotation.Nullable
  private String licenseUrl;
  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  @javax.annotation.Nullable
  private String version;
  public static final String SERIALIZED_NAME_KEYWORDS = "keywords";
  @SerializedName(SERIALIZED_NAME_KEYWORDS)
  @javax.annotation.Nullable
  private List<String> keywords;
  public static final String SERIALIZED_NAME_MEDIA_TYPE = "mediaType";
  @SerializedName(SERIALIZED_NAME_MEDIA_TYPE)
  @javax.annotation.Nullable
  private String mediaType;
  public static final String SERIALIZED_NAME_LANDING_PAGE_URL = "landingPageUrl";
  @SerializedName(SERIALIZED_NAME_LANDING_PAGE_URL)
  @javax.annotation.Nullable
  private String landingPageUrl;
  public static final String SERIALIZED_NAME_HTTP_DATASOURCE_HINTS_PROXY_METHOD = "httpDatasourceHintsProxyMethod";
  @SerializedName(SERIALIZED_NAME_HTTP_DATASOURCE_HINTS_PROXY_METHOD)
  @javax.annotation.Nullable
  private Boolean httpDatasourceHintsProxyMethod;
  public static final String SERIALIZED_NAME_HTTP_DATASOURCE_HINTS_PROXY_PATH = "httpDatasourceHintsProxyPath";
  @SerializedName(SERIALIZED_NAME_HTTP_DATASOURCE_HINTS_PROXY_PATH)
  @javax.annotation.Nullable
  private Boolean httpDatasourceHintsProxyPath;
  public static final String SERIALIZED_NAME_HTTP_DATASOURCE_HINTS_PROXY_QUERY_PARAMS = "httpDatasourceHintsProxyQueryParams";
  @SerializedName(SERIALIZED_NAME_HTTP_DATASOURCE_HINTS_PROXY_QUERY_PARAMS)
  @javax.annotation.Nullable
  private Boolean httpDatasourceHintsProxyQueryParams;
  public static final String SERIALIZED_NAME_HTTP_DATASOURCE_HINTS_PROXY_BODY = "httpDatasourceHintsProxyBody";
  @SerializedName(SERIALIZED_NAME_HTTP_DATASOURCE_HINTS_PROXY_BODY)
  @javax.annotation.Nullable
  private Boolean httpDatasourceHintsProxyBody;
  public static final String SERIALIZED_NAME_DATA_CATEGORY = "dataCategory";
  @SerializedName(SERIALIZED_NAME_DATA_CATEGORY)
  @javax.annotation.Nullable
  private String dataCategory;
  public static final String SERIALIZED_NAME_DATA_SUBCATEGORY = "dataSubcategory";
  @SerializedName(SERIALIZED_NAME_DATA_SUBCATEGORY)
  @javax.annotation.Nullable
  private String dataSubcategory;
  public static final String SERIALIZED_NAME_DATA_MODEL = "dataModel";
  @SerializedName(SERIALIZED_NAME_DATA_MODEL)
  @javax.annotation.Nullable
  private String dataModel;
  public static final String SERIALIZED_NAME_GEO_REFERENCE_METHOD = "geoReferenceMethod";
  @SerializedName(SERIALIZED_NAME_GEO_REFERENCE_METHOD)
  @javax.annotation.Nullable
  private String geoReferenceMethod;
  public static final String SERIALIZED_NAME_TRANSPORT_MODE = "transportMode";
  @SerializedName(SERIALIZED_NAME_TRANSPORT_MODE)
  @javax.annotation.Nullable
  private String transportMode;
  public static final String SERIALIZED_NAME_SOVEREIGN_LEGAL_NAME = "sovereignLegalName";
  @SerializedName(SERIALIZED_NAME_SOVEREIGN_LEGAL_NAME)
  @javax.annotation.Nullable
  private String sovereignLegalName;
  public static final String SERIALIZED_NAME_GEO_LOCATION = "geoLocation";
  @SerializedName(SERIALIZED_NAME_GEO_LOCATION)
  @javax.annotation.Nullable
  private String geoLocation;
  public static final String SERIALIZED_NAME_NUTS_LOCATIONS = "nutsLocations";
  @SerializedName(SERIALIZED_NAME_NUTS_LOCATIONS)
  @javax.annotation.Nullable
  private List<String> nutsLocations;
  public static final String SERIALIZED_NAME_DATA_SAMPLE_URLS = "dataSampleUrls";
  @SerializedName(SERIALIZED_NAME_DATA_SAMPLE_URLS)
  @javax.annotation.Nullable
  private List<String> dataSampleUrls;
  public static final String SERIALIZED_NAME_REFERENCE_FILE_URLS = "referenceFileUrls";
  @SerializedName(SERIALIZED_NAME_REFERENCE_FILE_URLS)
  @javax.annotation.Nullable
  private List<String> referenceFileUrls;
  public static final String SERIALIZED_NAME_REFERENCE_FILES_DESCRIPTION = "referenceFilesDescription";
  @SerializedName(SERIALIZED_NAME_REFERENCE_FILES_DESCRIPTION)
  @javax.annotation.Nullable
  private String referenceFilesDescription;
  public static final String SERIALIZED_NAME_CONDITIONS_FOR_USE = "conditionsForUse";
  @SerializedName(SERIALIZED_NAME_CONDITIONS_FOR_USE)
  @javax.annotation.Nullable
  private String conditionsForUse;
  public static final String SERIALIZED_NAME_DATA_UPDATE_FREQUENCY = "dataUpdateFrequency";
  @SerializedName(SERIALIZED_NAME_DATA_UPDATE_FREQUENCY)
  @javax.annotation.Nullable
  private String dataUpdateFrequency;
  public static final String SERIALIZED_NAME_TEMPORAL_COVERAGE_FROM = "temporalCoverageFrom";
  @SerializedName(SERIALIZED_NAME_TEMPORAL_COVERAGE_FROM)
  @javax.annotation.Nullable
  private LocalDate temporalCoverageFrom;
  public static final String SERIALIZED_NAME_TEMPORAL_COVERAGE_TO_INCLUSIVE = "temporalCoverageToInclusive";
  @SerializedName(SERIALIZED_NAME_TEMPORAL_COVERAGE_TO_INCLUSIVE)
  @javax.annotation.Nullable
  private LocalDate temporalCoverageToInclusive;
  public static final String SERIALIZED_NAME_ASSET_JSON_LD = "assetJsonLd";
  @SerializedName(SERIALIZED_NAME_ASSET_JSON_LD)
  @javax.annotation.Nullable
  private String assetJsonLd;
  public static final String SERIALIZED_NAME_CUSTOM_JSON_AS_STRING = "customJsonAsString";
  @SerializedName(SERIALIZED_NAME_CUSTOM_JSON_AS_STRING)
  @javax.annotation.Nullable
  private String customJsonAsString;
  public static final String SERIALIZED_NAME_CUSTOM_JSON_LD_AS_STRING = "customJsonLdAsString";
  @SerializedName(SERIALIZED_NAME_CUSTOM_JSON_LD_AS_STRING)
  @javax.annotation.Nullable
  private String customJsonLdAsString;
  public static final String SERIALIZED_NAME_PRIVATE_CUSTOM_JSON_AS_STRING = "privateCustomJsonAsString";
  @SerializedName(SERIALIZED_NAME_PRIVATE_CUSTOM_JSON_AS_STRING)
  @javax.annotation.Nullable
  private String privateCustomJsonAsString;
  public static final String SERIALIZED_NAME_PRIVATE_CUSTOM_JSON_LD_AS_STRING = "privateCustomJsonLdAsString";
  @SerializedName(SERIALIZED_NAME_PRIVATE_CUSTOM_JSON_LD_AS_STRING)
  @javax.annotation.Nullable
  private String privateCustomJsonLdAsString;

  public UiAsset() {
  }

  public UiAsset dataSourceAvailability(@javax.annotation.Nonnull DataSourceAvailability dataSourceAvailability) {
    this.dataSourceAvailability = dataSourceAvailability;
    return this;
  }

  /**
   * &#39;Live&#39; vs &#39;On Request&#39;
   * @return dataSourceAvailability
   */
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "\'Live\' vs \'On Request\'")
  public DataSourceAvailability getDataSourceAvailability() {
    return dataSourceAvailability;
  }

  public void setDataSourceAvailability(@javax.annotation.Nonnull DataSourceAvailability dataSourceAvailability) {
    this.dataSourceAvailability = dataSourceAvailability;
  }

  public UiAsset assetId(@javax.annotation.Nonnull String assetId) {
    this.assetId = assetId;
    return this;
  }

  /**
   * Asset Id
   * @return assetId
   */
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Asset Id")
  public String getAssetId() {
    return assetId;
  }

  public void setAssetId(@javax.annotation.Nonnull String assetId) {
    this.assetId = assetId;
  }

  public UiAsset connectorEndpoint(@javax.annotation.Nonnull String connectorEndpoint) {
    this.connectorEndpoint = connectorEndpoint;
    return this;
  }

  /**
   * Providing Connector&#39;s Connector Endpoint
   * @return connectorEndpoint
   */
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Providing Connector\'s Connector Endpoint")
  public String getConnectorEndpoint() {
    return connectorEndpoint;
  }

  public void setConnectorEndpoint(@javax.annotation.Nonnull String connectorEndpoint) {
    this.connectorEndpoint = connectorEndpoint;
  }

  public UiAsset participantId(@javax.annotation.Nonnull String participantId) {
    this.participantId = participantId;
    return this;
  }

  /**
   * Providing Connector&#39;s Participant ID
   * @return participantId
   */
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Providing Connector\'s Participant ID")
  public String getParticipantId() {
    return participantId;
  }

  public void setParticipantId(@javax.annotation.Nonnull String participantId) {
    this.participantId = participantId;
  }

  public UiAsset title(@javax.annotation.Nonnull String title) {
    this.title = title;
    return this;
  }

  /**
   * Asset Title
   * @return title
   */
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Asset Title")
  public String getTitle() {
    return title;
  }

  public void setTitle(@javax.annotation.Nonnull String title) {
    this.title = title;
  }

  public UiAsset creatorOrganizationName(@javax.annotation.Nonnull String creatorOrganizationName) {
    this.creatorOrganizationName = creatorOrganizationName;
    return this;
  }

  /**
   * Asset Organization Name
   * @return creatorOrganizationName
   */
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Asset Organization Name")
  public String getCreatorOrganizationName() {
    return creatorOrganizationName;
  }

  public void setCreatorOrganizationName(@javax.annotation.Nonnull String creatorOrganizationName) {
    this.creatorOrganizationName = creatorOrganizationName;
  }

  public UiAsset onRequestContactEmail(@javax.annotation.Nullable String onRequestContactEmail) {
    this.onRequestContactEmail = onRequestContactEmail;
    return this;
  }

  /**
   * Contact E-Mail address. Only for dataSourceAvailability ON_REQUEST.
   * @return onRequestContactEmail
   */
  @javax.annotation.Nullable
  @ApiModelProperty(example = "contact@my-org.com", value = "Contact E-Mail address. Only for dataSourceAvailability ON_REQUEST.")
  public String getOnRequestContactEmail() {
    return onRequestContactEmail;
  }

  public void setOnRequestContactEmail(@javax.annotation.Nullable String onRequestContactEmail) {
    this.onRequestContactEmail = onRequestContactEmail;
  }

  public UiAsset onRequestContactEmailSubject(@javax.annotation.Nullable String onRequestContactEmailSubject) {
    this.onRequestContactEmailSubject = onRequestContactEmailSubject;
    return this;
  }

  /**
   * Contact Preferred E-Mail Subject. Only for dataSourceAvailability ON_REQUEST.
   * @return onRequestContactEmailSubject
   */
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Department XYZ Data Offer Request - My Product, My API", value = "Contact Preferred E-Mail Subject. Only for dataSourceAvailability ON_REQUEST.")
  public String getOnRequestContactEmailSubject() {
    return onRequestContactEmailSubject;
  }

  public void setOnRequestContactEmailSubject(@javax.annotation.Nullable String onRequestContactEmailSubject) {
    this.onRequestContactEmailSubject = onRequestContactEmailSubject;
  }

  public UiAsset language(@javax.annotation.Nullable String language) {
    this.language = language;
    return this;
  }

  /**
   * Asset Language
   * @return language
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Asset Language")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(@javax.annotation.Nullable String language) {
    this.language = language;
  }

  public UiAsset description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Asset Description. Supports markdown.
   * @return description
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Asset Description. Supports markdown.")
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }

  public UiAsset descriptionShortText(@javax.annotation.Nullable String descriptionShortText) {
    this.descriptionShortText = descriptionShortText;
    return this;
  }

  /**
   * Asset Description Short Text generated from description. Contains no markdown.
   * @return descriptionShortText
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Asset Description Short Text generated from description. Contains no markdown.")
  public String getDescriptionShortText() {
    return descriptionShortText;
  }

  public void setDescriptionShortText(@javax.annotation.Nullable String descriptionShortText) {
    this.descriptionShortText = descriptionShortText;
  }

  public UiAsset isOwnConnector(@javax.annotation.Nonnull Boolean isOwnConnector) {
    this.isOwnConnector = isOwnConnector;
    return this;
  }

  /**
   * Flag that indicates whether this asset is created by this connector.
   * @return isOwnConnector
   */
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Flag that indicates whether this asset is created by this connector.")
  public Boolean getIsOwnConnector() {
    return isOwnConnector;
  }

  public void setIsOwnConnector(@javax.annotation.Nonnull Boolean isOwnConnector) {
    this.isOwnConnector = isOwnConnector;
  }

  public UiAsset publisherHomepage(@javax.annotation.Nullable String publisherHomepage) {
    this.publisherHomepage = publisherHomepage;
    return this;
  }

  /**
   * Asset Homepage
   * @return publisherHomepage
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Asset Homepage")
  public String getPublisherHomepage() {
    return publisherHomepage;
  }

  public void setPublisherHomepage(@javax.annotation.Nullable String publisherHomepage) {
    this.publisherHomepage = publisherHomepage;
  }

  public UiAsset licenseUrl(@javax.annotation.Nullable String licenseUrl) {
    this.licenseUrl = licenseUrl;
    return this;
  }

  /**
   * License URL
   * @return licenseUrl
   */
  @javax.annotation.Nullable
  @ApiModelProperty("License URL")
  public String getLicenseUrl() {
    return licenseUrl;
  }

  public void setLicenseUrl(@javax.annotation.Nullable String licenseUrl) {
    this.licenseUrl = licenseUrl;
  }

  public UiAsset version(@javax.annotation.Nullable String version) {
    this.version = version;
    return this;
  }

  /**
   * Version
   * @return version
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Version")
  public String getVersion() {
    return version;
  }

  public void setVersion(@javax.annotation.Nullable String version) {
    this.version = version;
  }

  public UiAsset keywords(@javax.annotation.Nullable List<String> keywords) {
    this.keywords = keywords;
    return this;
  }

  public UiAsset addKeywordsItem(String keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

  /**
   * Asset Keywords
   * @return keywords
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Asset Keywords")
  public List<String> getKeywords() {
    return keywords;
  }

  public void setKeywords(@javax.annotation.Nullable List<String> keywords) {
    this.keywords = keywords;
  }

  public UiAsset mediaType(@javax.annotation.Nullable String mediaType) {
    this.mediaType = mediaType;
    return this;
  }

  /**
   * Asset MediaType
   * @return mediaType
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Asset MediaType")
  public String getMediaType() {
    return mediaType;
  }

  public void setMediaType(@javax.annotation.Nullable String mediaType) {
    this.mediaType = mediaType;
  }

  public UiAsset landingPageUrl(@javax.annotation.Nullable String landingPageUrl) {
    this.landingPageUrl = landingPageUrl;
    return this;
  }

  /**
   * Homepage URL associated with the Asset
   * @return landingPageUrl
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Homepage URL associated with the Asset")
  public String getLandingPageUrl() {
    return landingPageUrl;
  }

  public void setLandingPageUrl(@javax.annotation.Nullable String landingPageUrl) {
    this.landingPageUrl = landingPageUrl;
  }

  public UiAsset httpDatasourceHintsProxyMethod(@javax.annotation.Nullable Boolean httpDatasourceHintsProxyMethod) {
    this.httpDatasourceHintsProxyMethod = httpDatasourceHintsProxyMethod;
    return this;
  }

  /**
   * HTTP Datasource Hint: Proxy Method. Only for dataSourceAvailability LIVE with an underlying HTTP_DATA Data Source.
   * @return httpDatasourceHintsProxyMethod
   */
  @javax.annotation.Nullable
  @ApiModelProperty("HTTP Datasource Hint: Proxy Method. Only for dataSourceAvailability LIVE with an underlying HTTP_DATA Data Source.")
  public Boolean getHttpDatasourceHintsProxyMethod() {
    return httpDatasourceHintsProxyMethod;
  }

  public void setHttpDatasourceHintsProxyMethod(@javax.annotation.Nullable Boolean httpDatasourceHintsProxyMethod) {
    this.httpDatasourceHintsProxyMethod = httpDatasourceHintsProxyMethod;
  }

  public UiAsset httpDatasourceHintsProxyPath(@javax.annotation.Nullable Boolean httpDatasourceHintsProxyPath) {
    this.httpDatasourceHintsProxyPath = httpDatasourceHintsProxyPath;
    return this;
  }

  /**
   * HTTP Datasource Hint: Proxy Path. Only for dataSourceAvailability LIVE with an underlying HTTP_DATA Data Source.
   * @return httpDatasourceHintsProxyPath
   */
  @javax.annotation.Nullable
  @ApiModelProperty("HTTP Datasource Hint: Proxy Path. Only for dataSourceAvailability LIVE with an underlying HTTP_DATA Data Source.")
  public Boolean getHttpDatasourceHintsProxyPath() {
    return httpDatasourceHintsProxyPath;
  }

  public void setHttpDatasourceHintsProxyPath(@javax.annotation.Nullable Boolean httpDatasourceHintsProxyPath) {
    this.httpDatasourceHintsProxyPath = httpDatasourceHintsProxyPath;
  }

  public UiAsset httpDatasourceHintsProxyQueryParams(@javax.annotation.Nullable Boolean httpDatasourceHintsProxyQueryParams) {
    this.httpDatasourceHintsProxyQueryParams = httpDatasourceHintsProxyQueryParams;
    return this;
  }

  /**
   * HTTP Datasource Hint: Proxy Query Params. Only for dataSourceAvailability LIVE with an underlying HTTP_DATA Data Source.
   * @return httpDatasourceHintsProxyQueryParams
   */
  @javax.annotation.Nullable
  @ApiModelProperty("HTTP Datasource Hint: Proxy Query Params. Only for dataSourceAvailability LIVE with an underlying HTTP_DATA Data Source.")
  public Boolean getHttpDatasourceHintsProxyQueryParams() {
    return httpDatasourceHintsProxyQueryParams;
  }

  public void setHttpDatasourceHintsProxyQueryParams(@javax.annotation.Nullable Boolean httpDatasourceHintsProxyQueryParams) {
    this.httpDatasourceHintsProxyQueryParams = httpDatasourceHintsProxyQueryParams;
  }

  public UiAsset httpDatasourceHintsProxyBody(@javax.annotation.Nullable Boolean httpDatasourceHintsProxyBody) {
    this.httpDatasourceHintsProxyBody = httpDatasourceHintsProxyBody;
    return this;
  }

  /**
   * HTTP Datasource Hint: Proxy Body. Only for dataSourceAvailability LIVE with an underlying HTTP_DATA Data Source.
   * @return httpDatasourceHintsProxyBody
   */
  @javax.annotation.Nullable
  @ApiModelProperty("HTTP Datasource Hint: Proxy Body. Only for dataSourceAvailability LIVE with an underlying HTTP_DATA Data Source.")
  public Boolean getHttpDatasourceHintsProxyBody() {
    return httpDatasourceHintsProxyBody;
  }

  public void setHttpDatasourceHintsProxyBody(@javax.annotation.Nullable Boolean httpDatasourceHintsProxyBody) {
    this.httpDatasourceHintsProxyBody = httpDatasourceHintsProxyBody;
  }

  public UiAsset dataCategory(@javax.annotation.Nullable String dataCategory) {
    this.dataCategory = dataCategory;
    return this;
  }

  /**
   * Data Category
   * @return dataCategory
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Data Category")
  public String getDataCategory() {
    return dataCategory;
  }

  public void setDataCategory(@javax.annotation.Nullable String dataCategory) {
    this.dataCategory = dataCategory;
  }

  public UiAsset dataSubcategory(@javax.annotation.Nullable String dataSubcategory) {
    this.dataSubcategory = dataSubcategory;
    return this;
  }

  /**
   * Data Subcategory
   * @return dataSubcategory
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Data Subcategory")
  public String getDataSubcategory() {
    return dataSubcategory;
  }

  public void setDataSubcategory(@javax.annotation.Nullable String dataSubcategory) {
    this.dataSubcategory = dataSubcategory;
  }

  public UiAsset dataModel(@javax.annotation.Nullable String dataModel) {
    this.dataModel = dataModel;
    return this;
  }

  /**
   * Data Model
   * @return dataModel
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Data Model")
  public String getDataModel() {
    return dataModel;
  }

  public void setDataModel(@javax.annotation.Nullable String dataModel) {
    this.dataModel = dataModel;
  }

  public UiAsset geoReferenceMethod(@javax.annotation.Nullable String geoReferenceMethod) {
    this.geoReferenceMethod = geoReferenceMethod;
    return this;
  }

  /**
   * Geo-Reference Method
   * @return geoReferenceMethod
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Geo-Reference Method")
  public String getGeoReferenceMethod() {
    return geoReferenceMethod;
  }

  public void setGeoReferenceMethod(@javax.annotation.Nullable String geoReferenceMethod) {
    this.geoReferenceMethod = geoReferenceMethod;
  }

  public UiAsset transportMode(@javax.annotation.Nullable String transportMode) {
    this.transportMode = transportMode;
    return this;
  }

  /**
   * Transport Mode
   * @return transportMode
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Transport Mode")
  public String getTransportMode() {
    return transportMode;
  }

  public void setTransportMode(@javax.annotation.Nullable String transportMode) {
    this.transportMode = transportMode;
  }

  public UiAsset sovereignLegalName(@javax.annotation.Nullable String sovereignLegalName) {
    this.sovereignLegalName = sovereignLegalName;
    return this;
  }

  /**
   * The sovereign is distinct from the publisher by being the legal owner of the data.
   * @return sovereignLegalName
   */
  @javax.annotation.Nullable
  @ApiModelProperty("The sovereign is distinct from the publisher by being the legal owner of the data.")
  public String getSovereignLegalName() {
    return sovereignLegalName;
  }

  public void setSovereignLegalName(@javax.annotation.Nullable String sovereignLegalName) {
    this.sovereignLegalName = sovereignLegalName;
  }

  public UiAsset geoLocation(@javax.annotation.Nullable String geoLocation) {
    this.geoLocation = geoLocation;
    return this;
  }

  /**
   * Geo location
   * @return geoLocation
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Geo location")
  public String getGeoLocation() {
    return geoLocation;
  }

  public void setGeoLocation(@javax.annotation.Nullable String geoLocation) {
    this.geoLocation = geoLocation;
  }

  public UiAsset nutsLocations(@javax.annotation.Nullable List<String> nutsLocations) {
    this.nutsLocations = nutsLocations;
    return this;
  }

  public UiAsset addNutsLocationsItem(String nutsLocationsItem) {
    if (this.nutsLocations == null) {
      this.nutsLocations = new ArrayList<>();
    }
    this.nutsLocations.add(nutsLocationsItem);
    return this;
  }

  /**
   * Locations by NUTS standard which divides countries into administrative divisions
   * @return nutsLocations
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Locations by NUTS standard which divides countries into administrative divisions")
  public List<String> getNutsLocations() {
    return nutsLocations;
  }

  public void setNutsLocations(@javax.annotation.Nullable List<String> nutsLocations) {
    this.nutsLocations = nutsLocations;
  }

  public UiAsset dataSampleUrls(@javax.annotation.Nullable List<String> dataSampleUrls) {
    this.dataSampleUrls = dataSampleUrls;
    return this;
  }

  public UiAsset addDataSampleUrlsItem(String dataSampleUrlsItem) {
    if (this.dataSampleUrls == null) {
      this.dataSampleUrls = new ArrayList<>();
    }
    this.dataSampleUrls.add(dataSampleUrlsItem);
    return this;
  }

  /**
   * Data sample URLs
   * @return dataSampleUrls
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Data sample URLs")
  public List<String> getDataSampleUrls() {
    return dataSampleUrls;
  }

  public void setDataSampleUrls(@javax.annotation.Nullable List<String> dataSampleUrls) {
    this.dataSampleUrls = dataSampleUrls;
  }

  public UiAsset referenceFileUrls(@javax.annotation.Nullable List<String> referenceFileUrls) {
    this.referenceFileUrls = referenceFileUrls;
    return this;
  }

  public UiAsset addReferenceFileUrlsItem(String referenceFileUrlsItem) {
    if (this.referenceFileUrls == null) {
      this.referenceFileUrls = new ArrayList<>();
    }
    this.referenceFileUrls.add(referenceFileUrlsItem);
    return this;
  }

  /**
   * Reference file/schema URLs
   * @return referenceFileUrls
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Reference file/schema URLs")
  public List<String> getReferenceFileUrls() {
    return referenceFileUrls;
  }

  public void setReferenceFileUrls(@javax.annotation.Nullable List<String> referenceFileUrls) {
    this.referenceFileUrls = referenceFileUrls;
  }

  public UiAsset referenceFilesDescription(@javax.annotation.Nullable String referenceFilesDescription) {
    this.referenceFilesDescription = referenceFilesDescription;
    return this;
  }

  /**
   * Additional information on reference files/schemas
   * @return referenceFilesDescription
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Additional information on reference files/schemas")
  public String getReferenceFilesDescription() {
    return referenceFilesDescription;
  }

  public void setReferenceFilesDescription(@javax.annotation.Nullable String referenceFilesDescription) {
    this.referenceFilesDescription = referenceFilesDescription;
  }

  public UiAsset conditionsForUse(@javax.annotation.Nullable String conditionsForUse) {
    this.conditionsForUse = conditionsForUse;
    return this;
  }

  /**
   * Instructions for use that are not legally relevant e.g. information on how to cite the dataset in papers
   * @return conditionsForUse
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Instructions for use that are not legally relevant e.g. information on how to cite the dataset in papers")
  public String getConditionsForUse() {
    return conditionsForUse;
  }

  public void setConditionsForUse(@javax.annotation.Nullable String conditionsForUse) {
    this.conditionsForUse = conditionsForUse;
  }

  public UiAsset dataUpdateFrequency(@javax.annotation.Nullable String dataUpdateFrequency) {
    this.dataUpdateFrequency = dataUpdateFrequency;
    return this;
  }

  /**
   * Data update frequency
   * @return dataUpdateFrequency
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Data update frequency")
  public String getDataUpdateFrequency() {
    return dataUpdateFrequency;
  }

  public void setDataUpdateFrequency(@javax.annotation.Nullable String dataUpdateFrequency) {
    this.dataUpdateFrequency = dataUpdateFrequency;
  }

  public UiAsset temporalCoverageFrom(@javax.annotation.Nullable LocalDate temporalCoverageFrom) {
    this.temporalCoverageFrom = temporalCoverageFrom;
    return this;
  }

  /**
   * Temporal coverage start date
   * @return temporalCoverageFrom
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Temporal coverage start date")
  public LocalDate getTemporalCoverageFrom() {
    return temporalCoverageFrom;
  }

  public void setTemporalCoverageFrom(@javax.annotation.Nullable LocalDate temporalCoverageFrom) {
    this.temporalCoverageFrom = temporalCoverageFrom;
  }

  public UiAsset temporalCoverageToInclusive(@javax.annotation.Nullable LocalDate temporalCoverageToInclusive) {
    this.temporalCoverageToInclusive = temporalCoverageToInclusive;
    return this;
  }

  /**
   * Temporal coverage end date (inclusive)
   * @return temporalCoverageToInclusive
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Temporal coverage end date (inclusive)")
  public LocalDate getTemporalCoverageToInclusive() {
    return temporalCoverageToInclusive;
  }

  public void setTemporalCoverageToInclusive(@javax.annotation.Nullable LocalDate temporalCoverageToInclusive) {
    this.temporalCoverageToInclusive = temporalCoverageToInclusive;
  }

  public UiAsset assetJsonLd(@javax.annotation.Nullable String assetJsonLd) {
    this.assetJsonLd = assetJsonLd;
    return this;
  }

  /**
   * Contains the entire asset in the JSON-LD format
   * @return assetJsonLd
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Contains the entire asset in the JSON-LD format")
  public String getAssetJsonLd() {
    return assetJsonLd;
  }

  public void setAssetJsonLd(@javax.annotation.Nullable String assetJsonLd) {
    this.assetJsonLd = assetJsonLd;
  }

  public UiAsset customJsonAsString(@javax.annotation.Nullable String customJsonAsString) {
    this.customJsonAsString = customJsonAsString;
    return this;
  }

  /**
   * Contains serialized custom properties in the JSON format.
   * @return customJsonAsString
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Contains serialized custom properties in the JSON format.")
  public String getCustomJsonAsString() {
    return customJsonAsString;
  }

  public void setCustomJsonAsString(@javax.annotation.Nullable String customJsonAsString) {
    this.customJsonAsString = customJsonAsString;
  }

  public UiAsset customJsonLdAsString(@javax.annotation.Nullable String customJsonLdAsString) {
    this.customJsonLdAsString = customJsonLdAsString;
    return this;
  }

  /**
   * Contains serialized custom properties in the JSON LD format. Contrary to the customJsonAsString field, this string must represent a JSON LD object and will be affected by JSON LD compaction and expansion. Due to a technical limitation, the properties can&#39;t be booleans.
   * @return customJsonLdAsString
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Contains serialized custom properties in the JSON LD format. Contrary to the customJsonAsString field, this string must represent a JSON LD object and will be affected by JSON LD compaction and expansion. Due to a technical limitation, the properties can\'t be booleans.")
  public String getCustomJsonLdAsString() {
    return customJsonLdAsString;
  }

  public void setCustomJsonLdAsString(@javax.annotation.Nullable String customJsonLdAsString) {
    this.customJsonLdAsString = customJsonLdAsString;
  }

  public UiAsset privateCustomJsonAsString(@javax.annotation.Nullable String privateCustomJsonAsString) {
    this.privateCustomJsonAsString = privateCustomJsonAsString;
    return this;
  }

  /**
   * Same as customJsonAsString but the data will be stored in the private properties.
   * @return privateCustomJsonAsString
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Same as customJsonAsString but the data will be stored in the private properties.")
  public String getPrivateCustomJsonAsString() {
    return privateCustomJsonAsString;
  }

  public void setPrivateCustomJsonAsString(@javax.annotation.Nullable String privateCustomJsonAsString) {
    this.privateCustomJsonAsString = privateCustomJsonAsString;
  }

  public UiAsset privateCustomJsonLdAsString(@javax.annotation.Nullable String privateCustomJsonLdAsString) {
    this.privateCustomJsonLdAsString = privateCustomJsonLdAsString;
    return this;
  }

  /**
   * Same as customJsonLdAsString but the data will be stored in the private properties. The same limitations apply.
   * @return privateCustomJsonLdAsString
   */
  @javax.annotation.Nullable
  @ApiModelProperty("Same as customJsonLdAsString but the data will be stored in the private properties. The same limitations apply.")
  public String getPrivateCustomJsonLdAsString() {
    return privateCustomJsonLdAsString;
  }

  public void setPrivateCustomJsonLdAsString(@javax.annotation.Nullable String privateCustomJsonLdAsString) {
    this.privateCustomJsonLdAsString = privateCustomJsonLdAsString;
  }

  @Override
  public boolean equals(Object o) {
    return EqualsBuilder.reflectionEquals(this, o, false, null, true);
  }

  @Override
  public int hashCode() {
    return HashCodeBuilder.reflectionHashCode(this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UiAsset {\n");
    sb.append("    dataSourceAvailability: ").append(toIndentedString(dataSourceAvailability)).append("\n");
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    connectorEndpoint: ").append(toIndentedString(connectorEndpoint)).append("\n");
    sb.append("    participantId: ").append(toIndentedString(participantId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    creatorOrganizationName: ").append(toIndentedString(creatorOrganizationName)).append("\n");
    sb.append("    onRequestContactEmail: ").append(toIndentedString(onRequestContactEmail)).append("\n");
    sb.append("    onRequestContactEmailSubject: ").append(toIndentedString(onRequestContactEmailSubject)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionShortText: ").append(toIndentedString(descriptionShortText)).append("\n");
    sb.append("    isOwnConnector: ").append(toIndentedString(isOwnConnector)).append("\n");
    sb.append("    publisherHomepage: ").append(toIndentedString(publisherHomepage)).append("\n");
    sb.append("    licenseUrl: ").append(toIndentedString(licenseUrl)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    mediaType: ").append(toIndentedString(mediaType)).append("\n");
    sb.append("    landingPageUrl: ").append(toIndentedString(landingPageUrl)).append("\n");
    sb.append("    httpDatasourceHintsProxyMethod: ").append(toIndentedString(httpDatasourceHintsProxyMethod)).append("\n");
    sb.append("    httpDatasourceHintsProxyPath: ").append(toIndentedString(httpDatasourceHintsProxyPath)).append("\n");
    sb.append("    httpDatasourceHintsProxyQueryParams: ").append(toIndentedString(httpDatasourceHintsProxyQueryParams)).append("\n");
    sb.append("    httpDatasourceHintsProxyBody: ").append(toIndentedString(httpDatasourceHintsProxyBody)).append("\n");
    sb.append("    dataCategory: ").append(toIndentedString(dataCategory)).append("\n");
    sb.append("    dataSubcategory: ").append(toIndentedString(dataSubcategory)).append("\n");
    sb.append("    dataModel: ").append(toIndentedString(dataModel)).append("\n");
    sb.append("    geoReferenceMethod: ").append(toIndentedString(geoReferenceMethod)).append("\n");
    sb.append("    transportMode: ").append(toIndentedString(transportMode)).append("\n");
    sb.append("    sovereignLegalName: ").append(toIndentedString(sovereignLegalName)).append("\n");
    sb.append("    geoLocation: ").append(toIndentedString(geoLocation)).append("\n");
    sb.append("    nutsLocations: ").append(toIndentedString(nutsLocations)).append("\n");
    sb.append("    dataSampleUrls: ").append(toIndentedString(dataSampleUrls)).append("\n");
    sb.append("    referenceFileUrls: ").append(toIndentedString(referenceFileUrls)).append("\n");
    sb.append("    referenceFilesDescription: ").append(toIndentedString(referenceFilesDescription)).append("\n");
    sb.append("    conditionsForUse: ").append(toIndentedString(conditionsForUse)).append("\n");
    sb.append("    dataUpdateFrequency: ").append(toIndentedString(dataUpdateFrequency)).append("\n");
    sb.append("    temporalCoverageFrom: ").append(toIndentedString(temporalCoverageFrom)).append("\n");
    sb.append("    temporalCoverageToInclusive: ").append(toIndentedString(temporalCoverageToInclusive)).append("\n");
    sb.append("    assetJsonLd: ").append(toIndentedString(assetJsonLd)).append("\n");
    sb.append("    customJsonAsString: ").append(toIndentedString(customJsonAsString)).append("\n");
    sb.append("    customJsonLdAsString: ").append(toIndentedString(customJsonLdAsString)).append("\n");
    sb.append("    privateCustomJsonAsString: ").append(toIndentedString(privateCustomJsonAsString)).append("\n");
    sb.append("    privateCustomJsonLdAsString: ").append(toIndentedString(privateCustomJsonLdAsString)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dataSourceAvailability");
    openapiFields.add("assetId");
    openapiFields.add("connectorEndpoint");
    openapiFields.add("participantId");
    openapiFields.add("title");
    openapiFields.add("creatorOrganizationName");
    openapiFields.add("onRequestContactEmail");
    openapiFields.add("onRequestContactEmailSubject");
    openapiFields.add("language");
    openapiFields.add("description");
    openapiFields.add("descriptionShortText");
    openapiFields.add("isOwnConnector");
    openapiFields.add("publisherHomepage");
    openapiFields.add("licenseUrl");
    openapiFields.add("version");
    openapiFields.add("keywords");
    openapiFields.add("mediaType");
    openapiFields.add("landingPageUrl");
    openapiFields.add("httpDatasourceHintsProxyMethod");
    openapiFields.add("httpDatasourceHintsProxyPath");
    openapiFields.add("httpDatasourceHintsProxyQueryParams");
    openapiFields.add("httpDatasourceHintsProxyBody");
    openapiFields.add("dataCategory");
    openapiFields.add("dataSubcategory");
    openapiFields.add("dataModel");
    openapiFields.add("geoReferenceMethod");
    openapiFields.add("transportMode");
    openapiFields.add("sovereignLegalName");
    openapiFields.add("geoLocation");
    openapiFields.add("nutsLocations");
    openapiFields.add("dataSampleUrls");
    openapiFields.add("referenceFileUrls");
    openapiFields.add("referenceFilesDescription");
    openapiFields.add("conditionsForUse");
    openapiFields.add("dataUpdateFrequency");
    openapiFields.add("temporalCoverageFrom");
    openapiFields.add("temporalCoverageToInclusive");
    openapiFields.add("assetJsonLd");
    openapiFields.add("customJsonAsString");
    openapiFields.add("customJsonLdAsString");
    openapiFields.add("privateCustomJsonAsString");
    openapiFields.add("privateCustomJsonLdAsString");
    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("dataSourceAvailability");
    openapiRequiredFields.add("assetId");
    openapiRequiredFields.add("connectorEndpoint");
    openapiRequiredFields.add("participantId");
    openapiRequiredFields.add("title");
    openapiRequiredFields.add("creatorOrganizationName");
    openapiRequiredFields.add("isOwnConnector");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UiAsset
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    if (jsonElement == null) {
      if (!UiAsset.openapiRequiredFields.isEmpty()) {
        // has required fields but JSON element is null
        throw new IllegalArgumentException(String.format("The required field(s) %s in UiAsset is not found in the empty JSON string", UiAsset.openapiRequiredFields.toString()));
      }
    }
    Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
    // check to see if the JSON string contains additional fields
    for (Map.Entry<String, JsonElement> entry : entries) {
      if (!UiAsset.openapiFields.contains(entry.getKey())) {
        throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UiAsset` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
      }
    }
    // check to make sure all required properties/fields are present in the JSON string
    for (String requiredField : UiAsset.openapiRequiredFields) {
      if (jsonElement.getAsJsonObject().get(requiredField) == null) {
        throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
      }
    }
    JsonObject jsonObj = jsonElement.getAsJsonObject();
    // validate the required field `dataSourceAvailability`
    DataSourceAvailability.validateJsonElement(jsonObj.get("dataSourceAvailability"));
    if (!jsonObj.get("assetId").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `assetId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetId").toString()));
    }
    if (!jsonObj.get("connectorEndpoint").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `connectorEndpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connectorEndpoint").toString()));
    }
    if (!jsonObj.get("participantId").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `participantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("participantId").toString()));
    }
    if (!jsonObj.get("title").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
    }
    if (!jsonObj.get("creatorOrganizationName").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `creatorOrganizationName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creatorOrganizationName").toString()));
    }
    if ((jsonObj.get("onRequestContactEmail") != null && !jsonObj.get("onRequestContactEmail").isJsonNull()) && !jsonObj.get("onRequestContactEmail").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `onRequestContactEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("onRequestContactEmail").toString()));
    }
    if ((jsonObj.get("onRequestContactEmailSubject") != null && !jsonObj.get("onRequestContactEmailSubject").isJsonNull()) && !jsonObj.get("onRequestContactEmailSubject").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `onRequestContactEmailSubject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("onRequestContactEmailSubject").toString()));
    }
    if ((jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) && !jsonObj.get("language").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language").toString()));
    }
    if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
    }
    if ((jsonObj.get("descriptionShortText") != null && !jsonObj.get("descriptionShortText").isJsonNull()) && !jsonObj.get("descriptionShortText").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `descriptionShortText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("descriptionShortText").toString()));
    }
    if ((jsonObj.get("publisherHomepage") != null && !jsonObj.get("publisherHomepage").isJsonNull()) && !jsonObj.get("publisherHomepage").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `publisherHomepage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publisherHomepage").toString()));
    }
    if ((jsonObj.get("licenseUrl") != null && !jsonObj.get("licenseUrl").isJsonNull()) && !jsonObj.get("licenseUrl").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `licenseUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("licenseUrl").toString()));
    }
    if ((jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) && !jsonObj.get("version").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
    }
    // ensure the optional json data is an array if present
    if (jsonObj.get("keywords") != null && !jsonObj.get("keywords").isJsonNull() && !jsonObj.get("keywords").isJsonArray()) {
      throw new IllegalArgumentException(String.format("Expected the field `keywords` to be an array in the JSON string but got `%s`", jsonObj.get("keywords").toString()));
    }
    if ((jsonObj.get("mediaType") != null && !jsonObj.get("mediaType").isJsonNull()) && !jsonObj.get("mediaType").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `mediaType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mediaType").toString()));
    }
    if ((jsonObj.get("landingPageUrl") != null && !jsonObj.get("landingPageUrl").isJsonNull()) && !jsonObj.get("landingPageUrl").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `landingPageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("landingPageUrl").toString()));
    }
    if ((jsonObj.get("dataCategory") != null && !jsonObj.get("dataCategory").isJsonNull()) && !jsonObj.get("dataCategory").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `dataCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataCategory").toString()));
    }
    if ((jsonObj.get("dataSubcategory") != null && !jsonObj.get("dataSubcategory").isJsonNull()) && !jsonObj.get("dataSubcategory").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `dataSubcategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataSubcategory").toString()));
    }
    if ((jsonObj.get("dataModel") != null && !jsonObj.get("dataModel").isJsonNull()) && !jsonObj.get("dataModel").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `dataModel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataModel").toString()));
    }
    if ((jsonObj.get("geoReferenceMethod") != null && !jsonObj.get("geoReferenceMethod").isJsonNull()) && !jsonObj.get("geoReferenceMethod").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `geoReferenceMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("geoReferenceMethod").toString()));
    }
    if ((jsonObj.get("transportMode") != null && !jsonObj.get("transportMode").isJsonNull()) && !jsonObj.get("transportMode").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `transportMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transportMode").toString()));
    }
    if ((jsonObj.get("sovereignLegalName") != null && !jsonObj.get("sovereignLegalName").isJsonNull()) && !jsonObj.get("sovereignLegalName").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `sovereignLegalName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sovereignLegalName").toString()));
    }
    if ((jsonObj.get("geoLocation") != null && !jsonObj.get("geoLocation").isJsonNull()) && !jsonObj.get("geoLocation").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `geoLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("geoLocation").toString()));
    }
    // ensure the optional json data is an array if present
    if (jsonObj.get("nutsLocations") != null && !jsonObj.get("nutsLocations").isJsonNull() && !jsonObj.get("nutsLocations").isJsonArray()) {
      throw new IllegalArgumentException(String.format("Expected the field `nutsLocations` to be an array in the JSON string but got `%s`", jsonObj.get("nutsLocations").toString()));
    }
    // ensure the optional json data is an array if present
    if (jsonObj.get("dataSampleUrls") != null && !jsonObj.get("dataSampleUrls").isJsonNull() && !jsonObj.get("dataSampleUrls").isJsonArray()) {
      throw new IllegalArgumentException(String.format("Expected the field `dataSampleUrls` to be an array in the JSON string but got `%s`", jsonObj.get("dataSampleUrls").toString()));
    }
    // ensure the optional json data is an array if present
    if (jsonObj.get("referenceFileUrls") != null && !jsonObj.get("referenceFileUrls").isJsonNull() && !jsonObj.get("referenceFileUrls").isJsonArray()) {
      throw new IllegalArgumentException(String.format("Expected the field `referenceFileUrls` to be an array in the JSON string but got `%s`", jsonObj.get("referenceFileUrls").toString()));
    }
    if ((jsonObj.get("referenceFilesDescription") != null && !jsonObj.get("referenceFilesDescription").isJsonNull()) && !jsonObj.get("referenceFilesDescription").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `referenceFilesDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("referenceFilesDescription").toString()));
    }
    if ((jsonObj.get("conditionsForUse") != null && !jsonObj.get("conditionsForUse").isJsonNull()) && !jsonObj.get("conditionsForUse").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `conditionsForUse` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conditionsForUse").toString()));
    }
    if ((jsonObj.get("dataUpdateFrequency") != null && !jsonObj.get("dataUpdateFrequency").isJsonNull()) && !jsonObj.get("dataUpdateFrequency").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `dataUpdateFrequency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataUpdateFrequency").toString()));
    }
    if ((jsonObj.get("assetJsonLd") != null && !jsonObj.get("assetJsonLd").isJsonNull()) && !jsonObj.get("assetJsonLd").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `assetJsonLd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetJsonLd").toString()));
    }
    if ((jsonObj.get("customJsonAsString") != null && !jsonObj.get("customJsonAsString").isJsonNull()) && !jsonObj.get("customJsonAsString").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `customJsonAsString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customJsonAsString").toString()));
    }
    if ((jsonObj.get("customJsonLdAsString") != null && !jsonObj.get("customJsonLdAsString").isJsonNull()) && !jsonObj.get("customJsonLdAsString").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `customJsonLdAsString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customJsonLdAsString").toString()));
    }
    if ((jsonObj.get("privateCustomJsonAsString") != null && !jsonObj.get("privateCustomJsonAsString").isJsonNull()) && !jsonObj.get("privateCustomJsonAsString").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `privateCustomJsonAsString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privateCustomJsonAsString").toString()));
    }
    if ((jsonObj.get("privateCustomJsonLdAsString") != null && !jsonObj.get("privateCustomJsonLdAsString").isJsonNull()) && !jsonObj.get("privateCustomJsonLdAsString").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `privateCustomJsonLdAsString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privateCustomJsonLdAsString").toString()));
    }
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
      if (!UiAsset.class.isAssignableFrom(type.getRawType())) {
        return null; // this class only serializes 'UiAsset' and its subtypes
      }
      final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
      final TypeAdapter<UiAsset> thisAdapter = gson.getDelegateAdapter(this, TypeToken.get(UiAsset.class));
      return (TypeAdapter<T>) new TypeAdapter<UiAsset>() {
        @Override
        public void write(JsonWriter out, UiAsset value) throws IOException {
          JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
          elementAdapter.write(out, obj);
        }
        @Override
        public UiAsset read(JsonReader in) throws IOException {
          JsonElement jsonElement = elementAdapter.read(in);
          validateJsonElement(jsonElement);
          return thisAdapter.fromJsonTree(jsonElement);
        }
      }.nullSafe();
    }
  }

  /**
   * Create an instance of UiAsset given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UiAsset
   * @throws IOException if the JSON string is invalid with respect to UiAsset
   */
  public static UiAsset fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UiAsset.class);
  }

  /**
   * Convert an instance of UiAsset to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }

  private static List<String> $default$keywords() {
    return new ArrayList<>();
  }

  private static List<String> $default$nutsLocations() {
    return new ArrayList<>();
  }

  private static List<String> $default$dataSampleUrls() {
    return new ArrayList<>();
  }

  private static List<String> $default$referenceFileUrls() {
    return new ArrayList<>();
  }


  public static class UiAssetBuilder {
    private DataSourceAvailability dataSourceAvailability;
    private String assetId;
    private String connectorEndpoint;
    private String participantId;
    private String title;
    private String creatorOrganizationName;
    private String onRequestContactEmail;
    private String onRequestContactEmailSubject;
    private String language;
    private String description;
    private String descriptionShortText;
    private Boolean isOwnConnector;
    private String publisherHomepage;
    private String licenseUrl;
    private String version;
    private boolean keywords$set;
    private List<String> keywords$value;
    private String mediaType;
    private String landingPageUrl;
    private Boolean httpDatasourceHintsProxyMethod;
    private Boolean httpDatasourceHintsProxyPath;
    private Boolean httpDatasourceHintsProxyQueryParams;
    private Boolean httpDatasourceHintsProxyBody;
    private String dataCategory;
    private String dataSubcategory;
    private String dataModel;
    private String geoReferenceMethod;
    private String transportMode;
    private String sovereignLegalName;
    private String geoLocation;
    private boolean nutsLocations$set;
    private List<String> nutsLocations$value;
    private boolean dataSampleUrls$set;
    private List<String> dataSampleUrls$value;
    private boolean referenceFileUrls$set;
    private List<String> referenceFileUrls$value;
    private String referenceFilesDescription;
    private String conditionsForUse;
    private String dataUpdateFrequency;
    private LocalDate temporalCoverageFrom;
    private LocalDate temporalCoverageToInclusive;
    private String assetJsonLd;
    private String customJsonAsString;
    private String customJsonLdAsString;
    private String privateCustomJsonAsString;
    private String privateCustomJsonLdAsString;

    UiAssetBuilder() {
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder dataSourceAvailability(@javax.annotation.Nonnull final DataSourceAvailability dataSourceAvailability) {
      if (dataSourceAvailability == null) {
        throw new NullPointerException("dataSourceAvailability is marked non-null but is null");
      }
      this.dataSourceAvailability = dataSourceAvailability;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder assetId(@javax.annotation.Nonnull final String assetId) {
      if (assetId == null) {
        throw new NullPointerException("assetId is marked non-null but is null");
      }
      this.assetId = assetId;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder connectorEndpoint(@javax.annotation.Nonnull final String connectorEndpoint) {
      if (connectorEndpoint == null) {
        throw new NullPointerException("connectorEndpoint is marked non-null but is null");
      }
      this.connectorEndpoint = connectorEndpoint;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder participantId(@javax.annotation.Nonnull final String participantId) {
      if (participantId == null) {
        throw new NullPointerException("participantId is marked non-null but is null");
      }
      this.participantId = participantId;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder title(@javax.annotation.Nonnull final String title) {
      if (title == null) {
        throw new NullPointerException("title is marked non-null but is null");
      }
      this.title = title;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder creatorOrganizationName(@javax.annotation.Nonnull final String creatorOrganizationName) {
      if (creatorOrganizationName == null) {
        throw new NullPointerException("creatorOrganizationName is marked non-null but is null");
      }
      this.creatorOrganizationName = creatorOrganizationName;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder onRequestContactEmail(@javax.annotation.Nullable final String onRequestContactEmail) {
      this.onRequestContactEmail = onRequestContactEmail;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder onRequestContactEmailSubject(@javax.annotation.Nullable final String onRequestContactEmailSubject) {
      this.onRequestContactEmailSubject = onRequestContactEmailSubject;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder language(@javax.annotation.Nullable final String language) {
      this.language = language;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder description(@javax.annotation.Nullable final String description) {
      this.description = description;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder descriptionShortText(@javax.annotation.Nullable final String descriptionShortText) {
      this.descriptionShortText = descriptionShortText;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder isOwnConnector(@javax.annotation.Nonnull final Boolean isOwnConnector) {
      if (isOwnConnector == null) {
        throw new NullPointerException("isOwnConnector is marked non-null but is null");
      }
      this.isOwnConnector = isOwnConnector;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder publisherHomepage(@javax.annotation.Nullable final String publisherHomepage) {
      this.publisherHomepage = publisherHomepage;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder licenseUrl(@javax.annotation.Nullable final String licenseUrl) {
      this.licenseUrl = licenseUrl;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder version(@javax.annotation.Nullable final String version) {
      this.version = version;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder keywords(@javax.annotation.Nullable final List<String> keywords) {
      this.keywords$value = keywords;
      keywords$set = true;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder mediaType(@javax.annotation.Nullable final String mediaType) {
      this.mediaType = mediaType;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder landingPageUrl(@javax.annotation.Nullable final String landingPageUrl) {
      this.landingPageUrl = landingPageUrl;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder httpDatasourceHintsProxyMethod(@javax.annotation.Nullable final Boolean httpDatasourceHintsProxyMethod) {
      this.httpDatasourceHintsProxyMethod = httpDatasourceHintsProxyMethod;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder httpDatasourceHintsProxyPath(@javax.annotation.Nullable final Boolean httpDatasourceHintsProxyPath) {
      this.httpDatasourceHintsProxyPath = httpDatasourceHintsProxyPath;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder httpDatasourceHintsProxyQueryParams(@javax.annotation.Nullable final Boolean httpDatasourceHintsProxyQueryParams) {
      this.httpDatasourceHintsProxyQueryParams = httpDatasourceHintsProxyQueryParams;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder httpDatasourceHintsProxyBody(@javax.annotation.Nullable final Boolean httpDatasourceHintsProxyBody) {
      this.httpDatasourceHintsProxyBody = httpDatasourceHintsProxyBody;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder dataCategory(@javax.annotation.Nullable final String dataCategory) {
      this.dataCategory = dataCategory;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder dataSubcategory(@javax.annotation.Nullable final String dataSubcategory) {
      this.dataSubcategory = dataSubcategory;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder dataModel(@javax.annotation.Nullable final String dataModel) {
      this.dataModel = dataModel;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder geoReferenceMethod(@javax.annotation.Nullable final String geoReferenceMethod) {
      this.geoReferenceMethod = geoReferenceMethod;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder transportMode(@javax.annotation.Nullable final String transportMode) {
      this.transportMode = transportMode;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder sovereignLegalName(@javax.annotation.Nullable final String sovereignLegalName) {
      this.sovereignLegalName = sovereignLegalName;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder geoLocation(@javax.annotation.Nullable final String geoLocation) {
      this.geoLocation = geoLocation;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder nutsLocations(@javax.annotation.Nullable final List<String> nutsLocations) {
      this.nutsLocations$value = nutsLocations;
      nutsLocations$set = true;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder dataSampleUrls(@javax.annotation.Nullable final List<String> dataSampleUrls) {
      this.dataSampleUrls$value = dataSampleUrls;
      dataSampleUrls$set = true;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder referenceFileUrls(@javax.annotation.Nullable final List<String> referenceFileUrls) {
      this.referenceFileUrls$value = referenceFileUrls;
      referenceFileUrls$set = true;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder referenceFilesDescription(@javax.annotation.Nullable final String referenceFilesDescription) {
      this.referenceFilesDescription = referenceFilesDescription;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder conditionsForUse(@javax.annotation.Nullable final String conditionsForUse) {
      this.conditionsForUse = conditionsForUse;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder dataUpdateFrequency(@javax.annotation.Nullable final String dataUpdateFrequency) {
      this.dataUpdateFrequency = dataUpdateFrequency;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder temporalCoverageFrom(@javax.annotation.Nullable final LocalDate temporalCoverageFrom) {
      this.temporalCoverageFrom = temporalCoverageFrom;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder temporalCoverageToInclusive(@javax.annotation.Nullable final LocalDate temporalCoverageToInclusive) {
      this.temporalCoverageToInclusive = temporalCoverageToInclusive;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder assetJsonLd(@javax.annotation.Nullable final String assetJsonLd) {
      this.assetJsonLd = assetJsonLd;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder customJsonAsString(@javax.annotation.Nullable final String customJsonAsString) {
      this.customJsonAsString = customJsonAsString;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder customJsonLdAsString(@javax.annotation.Nullable final String customJsonLdAsString) {
      this.customJsonLdAsString = customJsonLdAsString;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder privateCustomJsonAsString(@javax.annotation.Nullable final String privateCustomJsonAsString) {
      this.privateCustomJsonAsString = privateCustomJsonAsString;
      return this;
    }

    /**
     * @return {@code this}.
     */
    public UiAsset.UiAssetBuilder privateCustomJsonLdAsString(@javax.annotation.Nullable final String privateCustomJsonLdAsString) {
      this.privateCustomJsonLdAsString = privateCustomJsonLdAsString;
      return this;
    }

    public UiAsset build() {
      List<String> keywords$value = this.keywords$value;
      if (!this.keywords$set) keywords$value = UiAsset.$default$keywords();
      List<String> nutsLocations$value = this.nutsLocations$value;
      if (!this.nutsLocations$set) nutsLocations$value = UiAsset.$default$nutsLocations();
      List<String> dataSampleUrls$value = this.dataSampleUrls$value;
      if (!this.dataSampleUrls$set) dataSampleUrls$value = UiAsset.$default$dataSampleUrls();
      List<String> referenceFileUrls$value = this.referenceFileUrls$value;
      if (!this.referenceFileUrls$set) referenceFileUrls$value = UiAsset.$default$referenceFileUrls();
      return new UiAsset(this.dataSourceAvailability, this.assetId, this.connectorEndpoint, this.participantId, this.title, this.creatorOrganizationName, this.onRequestContactEmail, this.onRequestContactEmailSubject, this.language, this.description, this.descriptionShortText, this.isOwnConnector, this.publisherHomepage, this.licenseUrl, this.version, keywords$value, this.mediaType, this.landingPageUrl, this.httpDatasourceHintsProxyMethod, this.httpDatasourceHintsProxyPath, this.httpDatasourceHintsProxyQueryParams, this.httpDatasourceHintsProxyBody, this.dataCategory, this.dataSubcategory, this.dataModel, this.geoReferenceMethod, this.transportMode, this.sovereignLegalName, this.geoLocation, nutsLocations$value, dataSampleUrls$value, referenceFileUrls$value, this.referenceFilesDescription, this.conditionsForUse, this.dataUpdateFrequency, this.temporalCoverageFrom, this.temporalCoverageToInclusive, this.assetJsonLd, this.customJsonAsString, this.customJsonLdAsString, this.privateCustomJsonAsString, this.privateCustomJsonLdAsString);
    }

    @Override
    public String toString() {
      return "UiAsset.UiAssetBuilder(dataSourceAvailability=" + this.dataSourceAvailability + ", assetId=" + this.assetId + ", connectorEndpoint=" + this.connectorEndpoint + ", participantId=" + this.participantId + ", title=" + this.title + ", creatorOrganizationName=" + this.creatorOrganizationName + ", onRequestContactEmail=" + this.onRequestContactEmail + ", onRequestContactEmailSubject=" + this.onRequestContactEmailSubject + ", language=" + this.language + ", description=" + this.description + ", descriptionShortText=" + this.descriptionShortText + ", isOwnConnector=" + this.isOwnConnector + ", publisherHomepage=" + this.publisherHomepage + ", licenseUrl=" + this.licenseUrl + ", version=" + this.version + ", keywords$value=" + this.keywords$value + ", mediaType=" + this.mediaType + ", landingPageUrl=" + this.landingPageUrl + ", httpDatasourceHintsProxyMethod=" + this.httpDatasourceHintsProxyMethod + ", httpDatasourceHintsProxyPath=" + this.httpDatasourceHintsProxyPath + ", httpDatasourceHintsProxyQueryParams=" + this.httpDatasourceHintsProxyQueryParams + ", httpDatasourceHintsProxyBody=" + this.httpDatasourceHintsProxyBody + ", dataCategory=" + this.dataCategory + ", dataSubcategory=" + this.dataSubcategory + ", dataModel=" + this.dataModel + ", geoReferenceMethod=" + this.geoReferenceMethod + ", transportMode=" + this.transportMode + ", sovereignLegalName=" + this.sovereignLegalName + ", geoLocation=" + this.geoLocation + ", nutsLocations$value=" + this.nutsLocations$value + ", dataSampleUrls$value=" + this.dataSampleUrls$value + ", referenceFileUrls$value=" + this.referenceFileUrls$value + ", referenceFilesDescription=" + this.referenceFilesDescription + ", conditionsForUse=" + this.conditionsForUse + ", dataUpdateFrequency=" + this.dataUpdateFrequency + ", temporalCoverageFrom=" + this.temporalCoverageFrom + ", temporalCoverageToInclusive=" + this.temporalCoverageToInclusive + ", assetJsonLd=" + this.assetJsonLd + ", customJsonAsString=" + this.customJsonAsString + ", customJsonLdAsString=" + this.customJsonLdAsString + ", privateCustomJsonAsString=" + this.privateCustomJsonAsString + ", privateCustomJsonLdAsString=" + this.privateCustomJsonLdAsString + ")";
    }
  }

  public static UiAsset.UiAssetBuilder builder() {
    return new UiAsset.UiAssetBuilder();
  }

  public UiAsset(@javax.annotation.Nonnull final DataSourceAvailability dataSourceAvailability, @javax.annotation.Nonnull final String assetId, @javax.annotation.Nonnull final String connectorEndpoint, @javax.annotation.Nonnull final String participantId, @javax.annotation.Nonnull final String title, @javax.annotation.Nonnull final String creatorOrganizationName, @javax.annotation.Nullable final String onRequestContactEmail, @javax.annotation.Nullable final String onRequestContactEmailSubject, @javax.annotation.Nullable final String language, @javax.annotation.Nullable final String description, @javax.annotation.Nullable final String descriptionShortText, @javax.annotation.Nonnull final Boolean isOwnConnector, @javax.annotation.Nullable final String publisherHomepage, @javax.annotation.Nullable final String licenseUrl, @javax.annotation.Nullable final String version, @javax.annotation.Nullable final List<String> keywords, @javax.annotation.Nullable final String mediaType, @javax.annotation.Nullable final String landingPageUrl, @javax.annotation.Nullable final Boolean httpDatasourceHintsProxyMethod, @javax.annotation.Nullable final Boolean httpDatasourceHintsProxyPath, @javax.annotation.Nullable final Boolean httpDatasourceHintsProxyQueryParams, @javax.annotation.Nullable final Boolean httpDatasourceHintsProxyBody, @javax.annotation.Nullable final String dataCategory, @javax.annotation.Nullable final String dataSubcategory, @javax.annotation.Nullable final String dataModel, @javax.annotation.Nullable final String geoReferenceMethod, @javax.annotation.Nullable final String transportMode, @javax.annotation.Nullable final String sovereignLegalName, @javax.annotation.Nullable final String geoLocation, @javax.annotation.Nullable final List<String> nutsLocations, @javax.annotation.Nullable final List<String> dataSampleUrls, @javax.annotation.Nullable final List<String> referenceFileUrls, @javax.annotation.Nullable final String referenceFilesDescription, @javax.annotation.Nullable final String conditionsForUse, @javax.annotation.Nullable final String dataUpdateFrequency, @javax.annotation.Nullable final LocalDate temporalCoverageFrom, @javax.annotation.Nullable final LocalDate temporalCoverageToInclusive, @javax.annotation.Nullable final String assetJsonLd, @javax.annotation.Nullable final String customJsonAsString, @javax.annotation.Nullable final String customJsonLdAsString, @javax.annotation.Nullable final String privateCustomJsonAsString, @javax.annotation.Nullable final String privateCustomJsonLdAsString) {
    if (dataSourceAvailability == null) {
      throw new NullPointerException("dataSourceAvailability is marked non-null but is null");
    }
    if (assetId == null) {
      throw new NullPointerException("assetId is marked non-null but is null");
    }
    if (connectorEndpoint == null) {
      throw new NullPointerException("connectorEndpoint is marked non-null but is null");
    }
    if (participantId == null) {
      throw new NullPointerException("participantId is marked non-null but is null");
    }
    if (title == null) {
      throw new NullPointerException("title is marked non-null but is null");
    }
    if (creatorOrganizationName == null) {
      throw new NullPointerException("creatorOrganizationName is marked non-null but is null");
    }
    if (isOwnConnector == null) {
      throw new NullPointerException("isOwnConnector is marked non-null but is null");
    }
    this.dataSourceAvailability = dataSourceAvailability;
    this.assetId = assetId;
    this.connectorEndpoint = connectorEndpoint;
    this.participantId = participantId;
    this.title = title;
    this.creatorOrganizationName = creatorOrganizationName;
    this.onRequestContactEmail = onRequestContactEmail;
    this.onRequestContactEmailSubject = onRequestContactEmailSubject;
    this.language = language;
    this.description = description;
    this.descriptionShortText = descriptionShortText;
    this.isOwnConnector = isOwnConnector;
    this.publisherHomepage = publisherHomepage;
    this.licenseUrl = licenseUrl;
    this.version = version;
    this.keywords = keywords;
    this.mediaType = mediaType;
    this.landingPageUrl = landingPageUrl;
    this.httpDatasourceHintsProxyMethod = httpDatasourceHintsProxyMethod;
    this.httpDatasourceHintsProxyPath = httpDatasourceHintsProxyPath;
    this.httpDatasourceHintsProxyQueryParams = httpDatasourceHintsProxyQueryParams;
    this.httpDatasourceHintsProxyBody = httpDatasourceHintsProxyBody;
    this.dataCategory = dataCategory;
    this.dataSubcategory = dataSubcategory;
    this.dataModel = dataModel;
    this.geoReferenceMethod = geoReferenceMethod;
    this.transportMode = transportMode;
    this.sovereignLegalName = sovereignLegalName;
    this.geoLocation = geoLocation;
    this.nutsLocations = nutsLocations;
    this.dataSampleUrls = dataSampleUrls;
    this.referenceFileUrls = referenceFileUrls;
    this.referenceFilesDescription = referenceFilesDescription;
    this.conditionsForUse = conditionsForUse;
    this.dataUpdateFrequency = dataUpdateFrequency;
    this.temporalCoverageFrom = temporalCoverageFrom;
    this.temporalCoverageToInclusive = temporalCoverageToInclusive;
    this.assetJsonLd = assetJsonLd;
    this.customJsonAsString = customJsonAsString;
    this.customJsonLdAsString = customJsonLdAsString;
    this.privateCustomJsonAsString = privateCustomJsonAsString;
    this.privateCustomJsonLdAsString = privateCustomJsonLdAsString;
  }
}
