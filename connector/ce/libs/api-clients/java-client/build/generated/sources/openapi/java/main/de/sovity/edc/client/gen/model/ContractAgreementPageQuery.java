/*
 * sovity EDC API Wrapper
 * sovity's EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@ymatics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.sovity.edc.client.gen.model;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.sovity.edc.client.gen.model.ContractTerminationStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import de.sovity.edc.client.gen.JSON;

/**
 * Filters for querying a Contract Contract Agreement Page
 */
@ApiModel(description = "Filters for querying a Contract Contract Agreement Page")
@lombok.AllArgsConstructor
@lombok.Builder
@SuppressWarnings("all")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class ContractAgreementPageQuery {
  public static final String SERIALIZED_NAME_TERMINATION_STATUS = "terminationStatus";
  @SerializedName(SERIALIZED_NAME_TERMINATION_STATUS)
  @javax.annotation.Nullable
  private ContractTerminationStatus terminationStatus;

  public ContractAgreementPageQuery() {
  }

  public ContractAgreementPageQuery terminationStatus(@javax.annotation.Nullable ContractTerminationStatus terminationStatus) {
    this.terminationStatus = terminationStatus;
    return this;
  }

  /**
   * Optionally filter the resulting contract agreements by their termination status.
   * @return terminationStatus
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optionally filter the resulting contract agreements by their termination status.")
  public ContractTerminationStatus getTerminationStatus() {
    return terminationStatus;
  }

  public void setTerminationStatus(@javax.annotation.Nullable ContractTerminationStatus terminationStatus) {
    this.terminationStatus = terminationStatus;
  }



  @Override
  public boolean equals(Object o) {
    return EqualsBuilder.reflectionEquals(this, o, false, null, true);
  }

  @Override
  public int hashCode() {
    return HashCodeBuilder.reflectionHashCode(this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContractAgreementPageQuery {\n");
    sb.append("    terminationStatus: ").append(toIndentedString(terminationStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("terminationStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ContractAgreementPageQuery
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContractAgreementPageQuery.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContractAgreementPageQuery is not found in the empty JSON string", ContractAgreementPageQuery.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContractAgreementPageQuery.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContractAgreementPageQuery` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `terminationStatus`
      if (jsonObj.get("terminationStatus") != null && !jsonObj.get("terminationStatus").isJsonNull()) {
        ContractTerminationStatus.validateJsonElement(jsonObj.get("terminationStatus"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContractAgreementPageQuery.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContractAgreementPageQuery' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContractAgreementPageQuery> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContractAgreementPageQuery.class));

       return (TypeAdapter<T>) new TypeAdapter<ContractAgreementPageQuery>() {
           @Override
           public void write(JsonWriter out, ContractAgreementPageQuery value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContractAgreementPageQuery read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ContractAgreementPageQuery given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ContractAgreementPageQuery
   * @throws IOException if the JSON string is invalid with respect to ContractAgreementPageQuery
   */
  public static ContractAgreementPageQuery fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContractAgreementPageQuery.class);
  }

  /**
   * Convert an instance of ContractAgreementPageQuery to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

