/*
 * This file is generated by jOOQ.
 */
package de.sovity.edc.ce.db.jooq.tables;


import de.sovity.edc.ce.db.jooq.Keys;
import de.sovity.edc.ce.db.jooq.Public;
import de.sovity.edc.ce.db.jooq.tables.records.EdcEdrEntryRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EdcEdrEntry extends TableImpl<EdcEdrEntryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.edc_edr_entry</code>
     */
    public static final EdcEdrEntry EDC_EDR_ENTRY = new EdcEdrEntry();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EdcEdrEntryRecord> getRecordType() {
        return EdcEdrEntryRecord.class;
    }

    /**
     * The column <code>public.edc_edr_entry.transfer_process_id</code>.
     */
    public final TableField<EdcEdrEntryRecord, String> TRANSFER_PROCESS_ID = createField(DSL.name("transfer_process_id"), SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.edc_edr_entry.agreement_id</code>.
     */
    public final TableField<EdcEdrEntryRecord, String> AGREEMENT_ID = createField(DSL.name("agreement_id"), SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.edc_edr_entry.asset_id</code>.
     */
    public final TableField<EdcEdrEntryRecord, String> ASSET_ID = createField(DSL.name("asset_id"), SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.edc_edr_entry.provider_id</code>.
     */
    public final TableField<EdcEdrEntryRecord, String> PROVIDER_ID = createField(DSL.name("provider_id"), SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.edc_edr_entry.contract_negotiation_id</code>.
     */
    public final TableField<EdcEdrEntryRecord, String> CONTRACT_NEGOTIATION_ID = createField(DSL.name("contract_negotiation_id"), SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.edc_edr_entry.created_at</code>.
     */
    public final TableField<EdcEdrEntryRecord, Long> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.BIGINT.nullable(false), this, "");

    private EdcEdrEntry(Name alias, Table<EdcEdrEntryRecord> aliased) {
        this(alias, aliased, null);
    }

    private EdcEdrEntry(Name alias, Table<EdcEdrEntryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.edc_edr_entry</code> table reference
     */
    public EdcEdrEntry(String alias) {
        this(DSL.name(alias), EDC_EDR_ENTRY);
    }

    /**
     * Create an aliased <code>public.edc_edr_entry</code> table reference
     */
    public EdcEdrEntry(Name alias) {
        this(alias, EDC_EDR_ENTRY);
    }

    /**
     * Create a <code>public.edc_edr_entry</code> table reference
     */
    public EdcEdrEntry() {
        this(DSL.name("edc_edr_entry"), null);
    }

    public <O extends Record> EdcEdrEntry(Table<O> child, ForeignKey<O, EdcEdrEntryRecord> key) {
        super(child, key, EDC_EDR_ENTRY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<EdcEdrEntryRecord> getPrimaryKey() {
        return Keys.EDC_EDR_ENTRY_PKEY;
    }

    @Override
    public EdcEdrEntry as(String alias) {
        return new EdcEdrEntry(DSL.name(alias), this);
    }

    @Override
    public EdcEdrEntry as(Name alias) {
        return new EdcEdrEntry(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EdcEdrEntry rename(String name) {
        return new EdcEdrEntry(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EdcEdrEntry rename(Name name) {
        return new EdcEdrEntry(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, String, String, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
