/*
 * This file is generated by jOOQ.
 */
package de.sovity.edc.ce.db.jooq.tables.records;


import de.sovity.edc.ce.db.jooq.tables.EdcDataPlane;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EdcDataPlaneRecord extends UpdatableRecordImpl<EdcDataPlaneRecord> implements Record15<String, Integer, Long, Long, Integer, Long, JSON, String, String, String, JSON, JSON, JSON, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.edc_data_plane.process_id</code>.
     */
    public void setProcessId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.edc_data_plane.process_id</code>.
     */
    public String getProcessId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.edc_data_plane.state</code>.
     */
    public void setState(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.edc_data_plane.state</code>.
     */
    public Integer getState() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.edc_data_plane.created_at</code>.
     */
    public void setCreatedAt(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.edc_data_plane.created_at</code>.
     */
    public Long getCreatedAt() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.edc_data_plane.updated_at</code>.
     */
    public void setUpdatedAt(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.edc_data_plane.updated_at</code>.
     */
    public Long getUpdatedAt() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.edc_data_plane.state_count</code>.
     */
    public void setStateCount(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.edc_data_plane.state_count</code>.
     */
    public Integer getStateCount() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.edc_data_plane.state_time_stamp</code>.
     */
    public void setStateTimeStamp(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.edc_data_plane.state_time_stamp</code>.
     */
    public Long getStateTimeStamp() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.edc_data_plane.trace_context</code>. Java Map
     * serialized as json
     */
    public void setTraceContext(JSON value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.edc_data_plane.trace_context</code>. Java Map
     * serialized as json
     */
    public JSON getTraceContext() {
        return (JSON) get(6);
    }

    /**
     * Setter for <code>public.edc_data_plane.error_detail</code>.
     */
    public void setErrorDetail(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.edc_data_plane.error_detail</code>.
     */
    public String getErrorDetail() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.edc_data_plane.callback_address</code>.
     */
    public void setCallbackAddress(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.edc_data_plane.callback_address</code>.
     */
    public String getCallbackAddress() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.edc_data_plane.lease_id</code>.
     */
    public void setLeaseId(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.edc_data_plane.lease_id</code>.
     */
    public String getLeaseId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.edc_data_plane.source</code>. DataAddress
     * serialized as json
     */
    public void setSource(JSON value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.edc_data_plane.source</code>. DataAddress
     * serialized as json
     */
    public JSON getSource() {
        return (JSON) get(10);
    }

    /**
     * Setter for <code>public.edc_data_plane.destination</code>. DataAddress
     * serialized as json
     */
    public void setDestination(JSON value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.edc_data_plane.destination</code>. DataAddress
     * serialized as json
     */
    public JSON getDestination() {
        return (JSON) get(11);
    }

    /**
     * Setter for <code>public.edc_data_plane.properties</code>. Java Map
     * serialized as json
     */
    public void setProperties(JSON value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.edc_data_plane.properties</code>. Java Map
     * serialized as json
     */
    public JSON getProperties() {
        return (JSON) get(12);
    }

    /**
     * Setter for <code>public.edc_data_plane.flow_type</code>.
     */
    public void setFlowType(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.edc_data_plane.flow_type</code>.
     */
    public String getFlowType() {
        return (String) get(13);
    }

    /**
     * Setter for <code>public.edc_data_plane.transfer_type_destination</code>.
     */
    public void setTransferTypeDestination(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.edc_data_plane.transfer_type_destination</code>.
     */
    public String getTransferTypeDestination() {
        return (String) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row15<String, Integer, Long, Long, Integer, Long, JSON, String, String, String, JSON, JSON, JSON, String, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    @Override
    public Row15<String, Integer, Long, Long, Integer, Long, JSON, String, String, String, JSON, JSON, JSON, String, String> valuesRow() {
        return (Row15) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return EdcDataPlane.EDC_DATA_PLANE.PROCESS_ID;
    }

    @Override
    public Field<Integer> field2() {
        return EdcDataPlane.EDC_DATA_PLANE.STATE;
    }

    @Override
    public Field<Long> field3() {
        return EdcDataPlane.EDC_DATA_PLANE.CREATED_AT;
    }

    @Override
    public Field<Long> field4() {
        return EdcDataPlane.EDC_DATA_PLANE.UPDATED_AT;
    }

    @Override
    public Field<Integer> field5() {
        return EdcDataPlane.EDC_DATA_PLANE.STATE_COUNT;
    }

    @Override
    public Field<Long> field6() {
        return EdcDataPlane.EDC_DATA_PLANE.STATE_TIME_STAMP;
    }

    @Override
    public Field<JSON> field7() {
        return EdcDataPlane.EDC_DATA_PLANE.TRACE_CONTEXT;
    }

    @Override
    public Field<String> field8() {
        return EdcDataPlane.EDC_DATA_PLANE.ERROR_DETAIL;
    }

    @Override
    public Field<String> field9() {
        return EdcDataPlane.EDC_DATA_PLANE.CALLBACK_ADDRESS;
    }

    @Override
    public Field<String> field10() {
        return EdcDataPlane.EDC_DATA_PLANE.LEASE_ID;
    }

    @Override
    public Field<JSON> field11() {
        return EdcDataPlane.EDC_DATA_PLANE.SOURCE;
    }

    @Override
    public Field<JSON> field12() {
        return EdcDataPlane.EDC_DATA_PLANE.DESTINATION;
    }

    @Override
    public Field<JSON> field13() {
        return EdcDataPlane.EDC_DATA_PLANE.PROPERTIES;
    }

    @Override
    public Field<String> field14() {
        return EdcDataPlane.EDC_DATA_PLANE.FLOW_TYPE;
    }

    @Override
    public Field<String> field15() {
        return EdcDataPlane.EDC_DATA_PLANE.TRANSFER_TYPE_DESTINATION;
    }

    @Override
    public String component1() {
        return getProcessId();
    }

    @Override
    public Integer component2() {
        return getState();
    }

    @Override
    public Long component3() {
        return getCreatedAt();
    }

    @Override
    public Long component4() {
        return getUpdatedAt();
    }

    @Override
    public Integer component5() {
        return getStateCount();
    }

    @Override
    public Long component6() {
        return getStateTimeStamp();
    }

    @Override
    public JSON component7() {
        return getTraceContext();
    }

    @Override
    public String component8() {
        return getErrorDetail();
    }

    @Override
    public String component9() {
        return getCallbackAddress();
    }

    @Override
    public String component10() {
        return getLeaseId();
    }

    @Override
    public JSON component11() {
        return getSource();
    }

    @Override
    public JSON component12() {
        return getDestination();
    }

    @Override
    public JSON component13() {
        return getProperties();
    }

    @Override
    public String component14() {
        return getFlowType();
    }

    @Override
    public String component15() {
        return getTransferTypeDestination();
    }

    @Override
    public String value1() {
        return getProcessId();
    }

    @Override
    public Integer value2() {
        return getState();
    }

    @Override
    public Long value3() {
        return getCreatedAt();
    }

    @Override
    public Long value4() {
        return getUpdatedAt();
    }

    @Override
    public Integer value5() {
        return getStateCount();
    }

    @Override
    public Long value6() {
        return getStateTimeStamp();
    }

    @Override
    public JSON value7() {
        return getTraceContext();
    }

    @Override
    public String value8() {
        return getErrorDetail();
    }

    @Override
    public String value9() {
        return getCallbackAddress();
    }

    @Override
    public String value10() {
        return getLeaseId();
    }

    @Override
    public JSON value11() {
        return getSource();
    }

    @Override
    public JSON value12() {
        return getDestination();
    }

    @Override
    public JSON value13() {
        return getProperties();
    }

    @Override
    public String value14() {
        return getFlowType();
    }

    @Override
    public String value15() {
        return getTransferTypeDestination();
    }

    @Override
    public EdcDataPlaneRecord value1(String value) {
        setProcessId(value);
        return this;
    }

    @Override
    public EdcDataPlaneRecord value2(Integer value) {
        setState(value);
        return this;
    }

    @Override
    public EdcDataPlaneRecord value3(Long value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public EdcDataPlaneRecord value4(Long value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public EdcDataPlaneRecord value5(Integer value) {
        setStateCount(value);
        return this;
    }

    @Override
    public EdcDataPlaneRecord value6(Long value) {
        setStateTimeStamp(value);
        return this;
    }

    @Override
    public EdcDataPlaneRecord value7(JSON value) {
        setTraceContext(value);
        return this;
    }

    @Override
    public EdcDataPlaneRecord value8(String value) {
        setErrorDetail(value);
        return this;
    }

    @Override
    public EdcDataPlaneRecord value9(String value) {
        setCallbackAddress(value);
        return this;
    }

    @Override
    public EdcDataPlaneRecord value10(String value) {
        setLeaseId(value);
        return this;
    }

    @Override
    public EdcDataPlaneRecord value11(JSON value) {
        setSource(value);
        return this;
    }

    @Override
    public EdcDataPlaneRecord value12(JSON value) {
        setDestination(value);
        return this;
    }

    @Override
    public EdcDataPlaneRecord value13(JSON value) {
        setProperties(value);
        return this;
    }

    @Override
    public EdcDataPlaneRecord value14(String value) {
        setFlowType(value);
        return this;
    }

    @Override
    public EdcDataPlaneRecord value15(String value) {
        setTransferTypeDestination(value);
        return this;
    }

    @Override
    public EdcDataPlaneRecord values(String value1, Integer value2, Long value3, Long value4, Integer value5, Long value6, JSON value7, String value8, String value9, String value10, JSON value11, JSON value12, JSON value13, String value14, String value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EdcDataPlaneRecord
     */
    public EdcDataPlaneRecord() {
        super(EdcDataPlane.EDC_DATA_PLANE);
    }

    /**
     * Create a detached, initialised EdcDataPlaneRecord
     */
    public EdcDataPlaneRecord(String processId, Integer state, Long createdAt, Long updatedAt, Integer stateCount, Long stateTimeStamp, JSON traceContext, String errorDetail, String callbackAddress, String leaseId, JSON source, JSON destination, JSON properties, String flowType, String transferTypeDestination) {
        super(EdcDataPlane.EDC_DATA_PLANE);

        setProcessId(processId);
        setState(state);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setStateCount(stateCount);
        setStateTimeStamp(stateTimeStamp);
        setTraceContext(traceContext);
        setErrorDetail(errorDetail);
        setCallbackAddress(callbackAddress);
        setLeaseId(leaseId);
        setSource(source);
        setDestination(destination);
        setProperties(properties);
        setFlowType(flowType);
        setTransferTypeDestination(transferTypeDestination);
    }
}
