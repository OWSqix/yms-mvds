/*
 * This file is generated by jOOQ.
 */
package de.sovity.edc.ce.db.jooq.tables.records;


import de.sovity.edc.ce.db.jooq.tables.EdcLease;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EdcLeaseRecord extends UpdatableRecordImpl<EdcLeaseRecord> implements Record4<String, Long, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.edc_lease.leased_by</code>.
     */
    public void setLeasedBy(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.edc_lease.leased_by</code>.
     */
    public String getLeasedBy() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.edc_lease.leased_at</code>. posix timestamp of
     * lease
     */
    public void setLeasedAt(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.edc_lease.leased_at</code>. posix timestamp of
     * lease
     */
    public Long getLeasedAt() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.edc_lease.lease_duration</code>. duration of
     * lease in milliseconds
     */
    public void setLeaseDuration(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.edc_lease.lease_duration</code>. duration of
     * lease in milliseconds
     */
    public Integer getLeaseDuration() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.edc_lease.lease_id</code>.
     */
    public void setLeaseId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.edc_lease.lease_id</code>.
     */
    public String getLeaseId() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, Long, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, Long, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return EdcLease.EDC_LEASE.LEASED_BY;
    }

    @Override
    public Field<Long> field2() {
        return EdcLease.EDC_LEASE.LEASED_AT;
    }

    @Override
    public Field<Integer> field3() {
        return EdcLease.EDC_LEASE.LEASE_DURATION;
    }

    @Override
    public Field<String> field4() {
        return EdcLease.EDC_LEASE.LEASE_ID;
    }

    @Override
    public String component1() {
        return getLeasedBy();
    }

    @Override
    public Long component2() {
        return getLeasedAt();
    }

    @Override
    public Integer component3() {
        return getLeaseDuration();
    }

    @Override
    public String component4() {
        return getLeaseId();
    }

    @Override
    public String value1() {
        return getLeasedBy();
    }

    @Override
    public Long value2() {
        return getLeasedAt();
    }

    @Override
    public Integer value3() {
        return getLeaseDuration();
    }

    @Override
    public String value4() {
        return getLeaseId();
    }

    @Override
    public EdcLeaseRecord value1(String value) {
        setLeasedBy(value);
        return this;
    }

    @Override
    public EdcLeaseRecord value2(Long value) {
        setLeasedAt(value);
        return this;
    }

    @Override
    public EdcLeaseRecord value3(Integer value) {
        setLeaseDuration(value);
        return this;
    }

    @Override
    public EdcLeaseRecord value4(String value) {
        setLeaseId(value);
        return this;
    }

    @Override
    public EdcLeaseRecord values(String value1, Long value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EdcLeaseRecord
     */
    public EdcLeaseRecord() {
        super(EdcLease.EDC_LEASE);
    }

    /**
     * Create a detached, initialised EdcLeaseRecord
     */
    public EdcLeaseRecord(String leasedBy, Long leasedAt, Integer leaseDuration, String leaseId) {
        super(EdcLease.EDC_LEASE);

        setLeasedBy(leasedBy);
        setLeasedAt(leasedAt);
        setLeaseDuration(leaseDuration);
        setLeaseId(leaseId);
    }
}
