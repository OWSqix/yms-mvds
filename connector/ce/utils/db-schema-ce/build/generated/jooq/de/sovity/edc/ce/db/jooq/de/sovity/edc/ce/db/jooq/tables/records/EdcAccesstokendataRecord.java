/*
 * This file is generated by jOOQ.
 */
package de.sovity.edc.ce.db.jooq.tables.records;


import de.sovity.edc.ce.db.jooq.tables.EdcAccesstokendata;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EdcAccesstokendataRecord extends UpdatableRecordImpl<EdcAccesstokendataRecord> implements Record4<String, JSON, JSON, JSON> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.edc_accesstokendata.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.edc_accesstokendata.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.edc_accesstokendata.claim_token</code>.
     * ClaimToken serialized as JSON map
     */
    public void setClaimToken(JSON value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.edc_accesstokendata.claim_token</code>.
     * ClaimToken serialized as JSON map
     */
    public JSON getClaimToken() {
        return (JSON) get(1);
    }

    /**
     * Setter for <code>public.edc_accesstokendata.data_address</code>.
     * DataAddress serialized as JSON map
     */
    public void setDataAddress(JSON value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.edc_accesstokendata.data_address</code>.
     * DataAddress serialized as JSON map
     */
    public JSON getDataAddress() {
        return (JSON) get(2);
    }

    /**
     * Setter for <code>public.edc_accesstokendata.additional_properties</code>.
     * Optional Additional properties serialized as JSON map
     */
    public void setAdditionalProperties(JSON value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.edc_accesstokendata.additional_properties</code>.
     * Optional Additional properties serialized as JSON map
     */
    public JSON getAdditionalProperties() {
        return (JSON) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, JSON, JSON, JSON> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, JSON, JSON, JSON> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return EdcAccesstokendata.EDC_ACCESSTOKENDATA.ID;
    }

    @Override
    public Field<JSON> field2() {
        return EdcAccesstokendata.EDC_ACCESSTOKENDATA.CLAIM_TOKEN;
    }

    @Override
    public Field<JSON> field3() {
        return EdcAccesstokendata.EDC_ACCESSTOKENDATA.DATA_ADDRESS;
    }

    @Override
    public Field<JSON> field4() {
        return EdcAccesstokendata.EDC_ACCESSTOKENDATA.ADDITIONAL_PROPERTIES;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public JSON component2() {
        return getClaimToken();
    }

    @Override
    public JSON component3() {
        return getDataAddress();
    }

    @Override
    public JSON component4() {
        return getAdditionalProperties();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public JSON value2() {
        return getClaimToken();
    }

    @Override
    public JSON value3() {
        return getDataAddress();
    }

    @Override
    public JSON value4() {
        return getAdditionalProperties();
    }

    @Override
    public EdcAccesstokendataRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public EdcAccesstokendataRecord value2(JSON value) {
        setClaimToken(value);
        return this;
    }

    @Override
    public EdcAccesstokendataRecord value3(JSON value) {
        setDataAddress(value);
        return this;
    }

    @Override
    public EdcAccesstokendataRecord value4(JSON value) {
        setAdditionalProperties(value);
        return this;
    }

    @Override
    public EdcAccesstokendataRecord values(String value1, JSON value2, JSON value3, JSON value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EdcAccesstokendataRecord
     */
    public EdcAccesstokendataRecord() {
        super(EdcAccesstokendata.EDC_ACCESSTOKENDATA);
    }

    /**
     * Create a detached, initialised EdcAccesstokendataRecord
     */
    public EdcAccesstokendataRecord(String id, JSON claimToken, JSON dataAddress, JSON additionalProperties) {
        super(EdcAccesstokendata.EDC_ACCESSTOKENDATA);

        setId(id);
        setClaimToken(claimToken);
        setDataAddress(dataAddress);
        setAdditionalProperties(additionalProperties);
    }
}
