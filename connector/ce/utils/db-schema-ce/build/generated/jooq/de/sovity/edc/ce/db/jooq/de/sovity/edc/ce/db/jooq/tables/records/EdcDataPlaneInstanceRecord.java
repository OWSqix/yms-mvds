/*
 * This file is generated by jOOQ.
 */
package de.sovity.edc.ce.db.jooq.tables.records;


import de.sovity.edc.ce.db.jooq.tables.EdcDataPlaneInstance;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EdcDataPlaneInstanceRecord extends UpdatableRecordImpl<EdcDataPlaneInstanceRecord> implements Record3<String, JSON, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.edc_data_plane_instance.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.edc_data_plane_instance.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.edc_data_plane_instance.data</code>.
     */
    public void setData(JSON value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.edc_data_plane_instance.data</code>.
     */
    public JSON getData() {
        return (JSON) get(1);
    }

    /**
     * Setter for <code>public.edc_data_plane_instance.lease_id</code>.
     */
    public void setLeaseId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.edc_data_plane_instance.lease_id</code>.
     */
    public String getLeaseId() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, JSON, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, JSON, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return EdcDataPlaneInstance.EDC_DATA_PLANE_INSTANCE.ID;
    }

    @Override
    public Field<JSON> field2() {
        return EdcDataPlaneInstance.EDC_DATA_PLANE_INSTANCE.DATA;
    }

    @Override
    public Field<String> field3() {
        return EdcDataPlaneInstance.EDC_DATA_PLANE_INSTANCE.LEASE_ID;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public JSON component2() {
        return getData();
    }

    @Override
    public String component3() {
        return getLeaseId();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public JSON value2() {
        return getData();
    }

    @Override
    public String value3() {
        return getLeaseId();
    }

    @Override
    public EdcDataPlaneInstanceRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public EdcDataPlaneInstanceRecord value2(JSON value) {
        setData(value);
        return this;
    }

    @Override
    public EdcDataPlaneInstanceRecord value3(String value) {
        setLeaseId(value);
        return this;
    }

    @Override
    public EdcDataPlaneInstanceRecord values(String value1, JSON value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EdcDataPlaneInstanceRecord
     */
    public EdcDataPlaneInstanceRecord() {
        super(EdcDataPlaneInstance.EDC_DATA_PLANE_INSTANCE);
    }

    /**
     * Create a detached, initialised EdcDataPlaneInstanceRecord
     */
    public EdcDataPlaneInstanceRecord(String id, JSON data, String leaseId) {
        super(EdcDataPlaneInstance.EDC_DATA_PLANE_INSTANCE);

        setId(id);
        setData(data);
        setLeaseId(leaseId);
    }
}
