/*
 * This file is generated by jOOQ.
 */
package de.sovity.edc.ce.db.jooq;


import de.sovity.edc.ce.db.jooq.tables.EdcAccesstokendata;
import de.sovity.edc.ce.db.jooq.tables.EdcAsset;
import de.sovity.edc.ce.db.jooq.tables.EdcBusinessPartnerGroup;
import de.sovity.edc.ce.db.jooq.tables.EdcContractAgreement;
import de.sovity.edc.ce.db.jooq.tables.EdcContractDefinitions;
import de.sovity.edc.ce.db.jooq.tables.EdcContractNegotiation;
import de.sovity.edc.ce.db.jooq.tables.EdcDataPlane;
import de.sovity.edc.ce.db.jooq.tables.EdcDataPlaneInstance;
import de.sovity.edc.ce.db.jooq.tables.EdcEdrEntry;
import de.sovity.edc.ce.db.jooq.tables.EdcLease;
import de.sovity.edc.ce.db.jooq.tables.EdcPolicyMonitor;
import de.sovity.edc.ce.db.jooq.tables.EdcPolicydefinitions;
import de.sovity.edc.ce.db.jooq.tables.EdcTransferProcess;
import de.sovity.edc.ce.db.jooq.tables.SovityContractTermination;
import de.sovity.edc.ce.db.jooq.tables.records.EdcAccesstokendataRecord;
import de.sovity.edc.ce.db.jooq.tables.records.EdcAssetRecord;
import de.sovity.edc.ce.db.jooq.tables.records.EdcBusinessPartnerGroupRecord;
import de.sovity.edc.ce.db.jooq.tables.records.EdcContractAgreementRecord;
import de.sovity.edc.ce.db.jooq.tables.records.EdcContractDefinitionsRecord;
import de.sovity.edc.ce.db.jooq.tables.records.EdcContractNegotiationRecord;
import de.sovity.edc.ce.db.jooq.tables.records.EdcDataPlaneInstanceRecord;
import de.sovity.edc.ce.db.jooq.tables.records.EdcDataPlaneRecord;
import de.sovity.edc.ce.db.jooq.tables.records.EdcEdrEntryRecord;
import de.sovity.edc.ce.db.jooq.tables.records.EdcLeaseRecord;
import de.sovity.edc.ce.db.jooq.tables.records.EdcPolicyMonitorRecord;
import de.sovity.edc.ce.db.jooq.tables.records.EdcPolicydefinitionsRecord;
import de.sovity.edc.ce.db.jooq.tables.records.EdcTransferProcessRecord;
import de.sovity.edc.ce.db.jooq.tables.records.SovityContractTerminationRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<EdcAccesstokendataRecord> EDC_ACCESSTOKENDATA_PKEY = Internal.createUniqueKey(EdcAccesstokendata.EDC_ACCESSTOKENDATA, DSL.name("edc_accesstokendata_pkey"), new TableField[] { EdcAccesstokendata.EDC_ACCESSTOKENDATA.ID }, true);
    public static final UniqueKey<EdcAssetRecord> EDC_ASSET_PKEY = Internal.createUniqueKey(EdcAsset.EDC_ASSET, DSL.name("edc_asset_pkey"), new TableField[] { EdcAsset.EDC_ASSET.ASSET_ID }, true);
    public static final UniqueKey<EdcBusinessPartnerGroupRecord> EDC_BUSINESS_PARTNER_GROUP_PK = Internal.createUniqueKey(EdcBusinessPartnerGroup.EDC_BUSINESS_PARTNER_GROUP, DSL.name("edc_business_partner_group_pk"), new TableField[] { EdcBusinessPartnerGroup.EDC_BUSINESS_PARTNER_GROUP.BPN }, true);
    public static final UniqueKey<EdcContractAgreementRecord> CONTRACT_AGREEMENT_PK = Internal.createUniqueKey(EdcContractAgreement.EDC_CONTRACT_AGREEMENT, DSL.name("contract_agreement_pk"), new TableField[] { EdcContractAgreement.EDC_CONTRACT_AGREEMENT.AGR_ID }, true);
    public static final UniqueKey<EdcContractDefinitionsRecord> EDC_CONTRACT_DEFINITIONS_PKEY = Internal.createUniqueKey(EdcContractDefinitions.EDC_CONTRACT_DEFINITIONS, DSL.name("edc_contract_definitions_pkey"), new TableField[] { EdcContractDefinitions.EDC_CONTRACT_DEFINITIONS.CONTRACT_DEFINITION_ID }, true);
    public static final UniqueKey<EdcContractNegotiationRecord> CONTRACT_NEGOTIATION_PK = Internal.createUniqueKey(EdcContractNegotiation.EDC_CONTRACT_NEGOTIATION, DSL.name("contract_negotiation_pk"), new TableField[] { EdcContractNegotiation.EDC_CONTRACT_NEGOTIATION.ID }, true);
    public static final UniqueKey<EdcDataPlaneRecord> EDC_DATA_PLANE_PKEY = Internal.createUniqueKey(EdcDataPlane.EDC_DATA_PLANE, DSL.name("edc_data_plane_pkey"), new TableField[] { EdcDataPlane.EDC_DATA_PLANE.PROCESS_ID }, true);
    public static final UniqueKey<EdcDataPlaneInstanceRecord> EDC_DATA_PLANE_INSTANCE_PKEY = Internal.createUniqueKey(EdcDataPlaneInstance.EDC_DATA_PLANE_INSTANCE, DSL.name("edc_data_plane_instance_pkey"), new TableField[] { EdcDataPlaneInstance.EDC_DATA_PLANE_INSTANCE.ID }, true);
    public static final UniqueKey<EdcEdrEntryRecord> EDC_EDR_ENTRY_PKEY = Internal.createUniqueKey(EdcEdrEntry.EDC_EDR_ENTRY, DSL.name("edc_edr_entry_pkey"), new TableField[] { EdcEdrEntry.EDC_EDR_ENTRY.TRANSFER_PROCESS_ID }, true);
    public static final UniqueKey<EdcLeaseRecord> LEASE_PK = Internal.createUniqueKey(EdcLease.EDC_LEASE, DSL.name("lease_pk"), new TableField[] { EdcLease.EDC_LEASE.LEASE_ID }, true);
    public static final UniqueKey<EdcPolicyMonitorRecord> EDC_POLICY_MONITOR_PKEY = Internal.createUniqueKey(EdcPolicyMonitor.EDC_POLICY_MONITOR, DSL.name("edc_policy_monitor_pkey"), new TableField[] { EdcPolicyMonitor.EDC_POLICY_MONITOR.ENTRY_ID }, true);
    public static final UniqueKey<EdcPolicydefinitionsRecord> EDC_POLICYDEFINITIONS_PKEY = Internal.createUniqueKey(EdcPolicydefinitions.EDC_POLICYDEFINITIONS, DSL.name("edc_policydefinitions_pkey"), new TableField[] { EdcPolicydefinitions.EDC_POLICYDEFINITIONS.POLICY_ID }, true);
    public static final UniqueKey<EdcTransferProcessRecord> TRANSFER_PROCESS_PK = Internal.createUniqueKey(EdcTransferProcess.EDC_TRANSFER_PROCESS, DSL.name("transfer_process_pk"), new TableField[] { EdcTransferProcess.EDC_TRANSFER_PROCESS.TRANSFERPROCESS_ID }, true);
    public static final UniqueKey<SovityContractTerminationRecord> SOVITY_CONTRACT_TERMINATION_PKEY = Internal.createUniqueKey(SovityContractTermination.SOVITY_CONTRACT_TERMINATION, DSL.name("sovity_contract_termination_pkey"), new TableField[] { SovityContractTermination.SOVITY_CONTRACT_TERMINATION.CONTRACT_AGREEMENT_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<EdcContractNegotiationRecord, EdcContractAgreementRecord> EDC_CONTRACT_NEGOTIATION__CONTRACT_NEGOTIATION_CONTRACT_AGREEMENT_ID_FK = Internal.createForeignKey(EdcContractNegotiation.EDC_CONTRACT_NEGOTIATION, DSL.name("contract_negotiation_contract_agreement_id_fk"), new TableField[] { EdcContractNegotiation.EDC_CONTRACT_NEGOTIATION.AGREEMENT_ID }, Keys.CONTRACT_AGREEMENT_PK, new TableField[] { EdcContractAgreement.EDC_CONTRACT_AGREEMENT.AGR_ID }, true);
    public static final ForeignKey<EdcContractNegotiationRecord, EdcLeaseRecord> EDC_CONTRACT_NEGOTIATION__CONTRACT_NEGOTIATION_LEASE_LEASE_ID_FK = Internal.createForeignKey(EdcContractNegotiation.EDC_CONTRACT_NEGOTIATION, DSL.name("contract_negotiation_lease_lease_id_fk"), new TableField[] { EdcContractNegotiation.EDC_CONTRACT_NEGOTIATION.LEASE_ID }, Keys.LEASE_PK, new TableField[] { EdcLease.EDC_LEASE.LEASE_ID }, true);
    public static final ForeignKey<EdcDataPlaneRecord, EdcLeaseRecord> EDC_DATA_PLANE__DATA_PLANE_LEASE_LEASE_ID_FK = Internal.createForeignKey(EdcDataPlane.EDC_DATA_PLANE, DSL.name("data_plane_lease_lease_id_fk"), new TableField[] { EdcDataPlane.EDC_DATA_PLANE.LEASE_ID }, Keys.LEASE_PK, new TableField[] { EdcLease.EDC_LEASE.LEASE_ID }, true);
    public static final ForeignKey<EdcDataPlaneInstanceRecord, EdcLeaseRecord> EDC_DATA_PLANE_INSTANCE__DATA_PLANE_INSTANCE_LEASE_ID_FK = Internal.createForeignKey(EdcDataPlaneInstance.EDC_DATA_PLANE_INSTANCE, DSL.name("data_plane_instance_lease_id_fk"), new TableField[] { EdcDataPlaneInstance.EDC_DATA_PLANE_INSTANCE.LEASE_ID }, Keys.LEASE_PK, new TableField[] { EdcLease.EDC_LEASE.LEASE_ID }, true);
    public static final ForeignKey<EdcPolicyMonitorRecord, EdcLeaseRecord> EDC_POLICY_MONITOR__POLICY_MONITOR_LEASE_LEASE_ID_FK = Internal.createForeignKey(EdcPolicyMonitor.EDC_POLICY_MONITOR, DSL.name("policy_monitor_lease_lease_id_fk"), new TableField[] { EdcPolicyMonitor.EDC_POLICY_MONITOR.LEASE_ID }, Keys.LEASE_PK, new TableField[] { EdcLease.EDC_LEASE.LEASE_ID }, true);
    public static final ForeignKey<EdcTransferProcessRecord, EdcLeaseRecord> EDC_TRANSFER_PROCESS__TRANSFER_PROCESS_LEASE_LEASE_ID_FK = Internal.createForeignKey(EdcTransferProcess.EDC_TRANSFER_PROCESS, DSL.name("transfer_process_lease_lease_id_fk"), new TableField[] { EdcTransferProcess.EDC_TRANSFER_PROCESS.LEASE_ID }, Keys.LEASE_PK, new TableField[] { EdcLease.EDC_LEASE.LEASE_ID }, true);
    public static final ForeignKey<SovityContractTerminationRecord, EdcContractAgreementRecord> SOVITY_CONTRACT_TERMINATION__AGREEMENT_FK = Internal.createForeignKey(SovityContractTermination.SOVITY_CONTRACT_TERMINATION, DSL.name("agreement_fk"), new TableField[] { SovityContractTermination.SOVITY_CONTRACT_TERMINATION.CONTRACT_AGREEMENT_ID }, Keys.CONTRACT_AGREEMENT_PK, new TableField[] { EdcContractAgreement.EDC_CONTRACT_AGREEMENT.AGR_ID }, true);
}
